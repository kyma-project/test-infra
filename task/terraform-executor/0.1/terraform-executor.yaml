apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: terraform-executor
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.36.0"
    tekton.dev/categories: IaC
    tekton.dev/tags: terraform
    tekton.dev/displayName: "terraform-executor"
    tekto.dev/platforms: "linux/amd64"
spec:
  description: >-
    The terraform-executor Task initializes Terraform state locally and runs actions for the provided terraform config.
    The usual actions are `plan` and `apply`. Authentication to Google Cloud is done through the Kubernetes service account with the
    workload identity configured. The parameter **additional_terraform_args** allows defining Terraform CLI arguments in pipelines.
    When this parameter value is set in a pipeline, you must add the default value `-no-color` to the list.
    The parameter **additional_tfcmt_args** allows defining additional variable tfcmt CLI arguments in pipelines.
    This parameter must at least provide -sha and/or -pr arguments together with its values. See the example pipeline for the parameters' values example
    The task uses the tfcmt tool to run Terraform actions and post the results to GitHub PRs.
    The tfcmt tool uses github-comments metadata in GitHub comments, so github-comments can be used later for processing tfcmt comments.
  workspaces:
    - name: repo
      description: "The workspace stores sources to apply. Usually, this should be a workspace shared with other tasks."
      mountPath: /home/prow/go
  params:
    - name: terraform_action
      description: "Terraform action to execute on provided config files."
      type: string
    - name: module_path
      description: "Path to the terraform config files."
      type: string
    - name: additional_terraform_args
      description: "Additional terraform arguments. Add -no-color flag if you override default value."
      type: array
      default: [ "-no-color" ]
    - name: additional_tfcmt_args
      description: "Additional tfcmt arguments. Provide at least -sha and/or -pr arguments as parameter value."
      type: array
    - name: REPO_OWNER
      description: "GitHub org that triggers the job. Variable set by Prow."
      type: string
    - name: REPO_NAME
      description: "GitHub repo that triggers the job. Variable set by Prow."
      type: string
    - name: github-token-secret
      description: "Name of the secret holding the Kyma bot GitHub token."
      type: string
      default: kyma-bot-github-token
  steps:
    - name: terraform-init
      image: europe-docker.pkg.dev/kyma-project/prod/test-infra/terraform:v20230215-6bf03a31
      workingDir: /home/prow/go/src/github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)
      command:
        - /bin/terraform
      args:
        - -chdir=$(params.module_path)
        - init
        - -input=false
      resources:
        requests:
          memory: 300Mi
          cpu: 200m
    - name: terraform-execute
      image: europe-docker.pkg.dev/kyma-project/prod/test-infra/terraform:v20230215-6bf03a31
      workingDir: /home/prow/go/src/github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)
      command:
        - /tfcmt/tfcmt
      args:
        - -owner=$(params.REPO_OWNER)
        - -repo=$(params.REPO_NAME)
        - $(params.additional_tfcmt_args[*])
        - $(params.terraform_action)
        - --
        - terraform
        - -chdir=$(params.module_path)
        - $(params.terraform_action)
        - -input=false
        - $(params.additional_terraform_args[*])
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github-token-secret)
              key: token
      resources:
        requests:
          memory: 300Mi
          cpu: 200m
