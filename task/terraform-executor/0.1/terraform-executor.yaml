apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: terraform-executor
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.36.0"
    tekton.dev/categories: IaC
    tekton.dev/tags: terraform
    tekton.dev/displayName: "terraform-executor"
    tekto.dev/platforms: "linux/amd64"
spec:
  description: >-
    The terraform-executor task initialise locally terraform state and run actions for provided terraform config.
    Usually, actions are plan and apply. Authentication to the Google Cloud is done through k8s service account with
    workload identity configured. A parameter additional_terraform_args allows defining terraform cli arguments in
    pipelines. When this parameter value is set in pipeline, a default value -no-color must be added to the list.
    The task uses tfcmt tool to run terraform actions and post results to GitHubPR.
    tfcmt tool use a github-comments metadata in GitHub comments, so github-comments can be used later for processing tfcmt comments.
  workspaces:
    - name: repo
      description: "The workspace stores sources to apply. Usually, this should be a workspace shared with other tasks."
      mountPath: /home/prow/go
  params:
    - name: terraform_action
      description: "Terraform action to execute on provided config files."
      type: string
    - name: module_path
      description: "Path to the terraform config files."
      type: string
    - name: additional_terraform_args
      description: "Additional terraform arguments. Add -no-color flag if you override default value."
      type: array
      default: [ "-no-color" ]
    - name: PULL_NUMBER
      description: "Pull request number. Variable set by Prow."
      type: string
    - name: SHA
      description: "Commit hash with terraform config files."
      type: string
    - name: REPO_OWNER
      description: "GitHub org that triggers the job. Variable set by Prow."
      type: string
    - name: REPO_NAME
      description: "GitHub repo that triggers the job. Variable set by Prow."
      type: string
    - name: github-token-secret
      description: "Name of the secret holding the Kyma bot GitHub token."
      type: string
      default: kyma-bot-github-token
  steps:
    - name: terraform-init
      image: europe-docker.pkg.dev/kyma-project/prod/test-infra/terraform:v20230215-6bf03a31
      workingDir: /home/prow/go/src/github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)
      command:
        - /bin/terraform
      args:
        - -chdir=$(params.module_path)
        - init
        - -input=false
      resources:
        requests:
          memory: 300Mi
          cpu: 200m
    - name: terraform-execute
      image: europe-docker.pkg.dev/kyma-project/prod/test-infra/terraform:v20230215-6bf03a31
      workingDir: /home/prow/go/src/github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)
      command:
        - /tfcmt/tfcmt
      args:
        - -owner=$(params.REPO_OWNER)
        - -repo=$(params.REPO_NAME)
        - -pr=$(params.PULL_NUMBER)
        - -sha=$(params.SHA)
        - $(params.terraform_action)
        - --
        - terraform
        - -chdir=$(params.module_path)
        - $(params.terraform_action)
        - -input=false
        - "$(params.additional_terraform_args[*])"
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github-token-secret)
              key: token
      resources:
        requests:
          memory: 300Mi
          cpu: 200m
