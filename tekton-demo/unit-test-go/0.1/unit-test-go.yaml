apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: unit-tests-go
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.36.0"
    tekton.dev/categories: Code Quality
    tekton.dev/tags: test
    tekton.dev/displayName: "unit-tests-go"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    A unit-test-go Task is used to run unit tests for go code.
    Task is tailored to be triggered by prow as a prowjob.
    It uses a golangci-lint tool to run the tests.
    The golangci tool config is stored in the .golangci.yaml file in a repository hosting tested code.
  workspaces:
    - name: repo
      description: "The workspace where sources to test are stored. Usually this it should be a shared workspace with other tasks."
      mountPath: /home/prow/go
  params:
    - name: path-to-test
      description: "The path to go code to test."
      type: string
      default: "./..."
    - name: REPO_OWNER
      description: "GitHub org that triggered the prowjob. Variable set by prow. Prow will not set this variable if the prowjob type is periodic. In that case an empty string default value will be used."
      type: string
      default: ""
    - name: REPO_NAME
      description: "GitHub repo that triggered the prowjob. Variable set by prow. Prow will not set this variable if the prowjob type is periodic. In that case an empty string default value will be used."
      type: string
      default: ""
  results:
    - name: commit
      description: The precise commit SHA that was fetched by this Task.
    - name: url
      description: The precise URL that was fetched by this Task.
    - name: committer-date
      description: The epoch timestamp of the commit that was fetched by this Task.
  steps:
    - name: unit-tests-go
      image: eu.gcr.io/kyma-project/test-infra/golangci-lint:v20230221-85b2d35f
      workingDir: /home/prow/go/src/github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)
      command:
        - "go"
      args:
        - "test"
        - "-cover"
        - "$(params.path-to-test)"
      env:
        - name: REPO_OWNER
          value: $(params.REPO_OWNER)
        - name: REPO_NAME
          value: $(params.REPO_NAME)
      resources:
        requests:
          memory: 500M
          cpu: 500m
