# Code generated by rendertemplates. DO NOT EDIT.

presets:
  # test clusters log collector
  - labels:
      preset-log-collector-slack-token: "true"
    env:
      - name: LOG_COLLECTOR_SLACK_TOKEN
        valueFrom:
          secretKeyRef:
            name: log-collector-slack-token
            key: token
  # pjtester
  - labels:
      preset-pjtester-kubeconfig: "true"
    env:
      - name: KUBECONFIG_PATH
        value: /etc/kubeconfig/pjtester/config
    volumes:
      - name: pjtester-kubeconfig
        secret:
          secretName: pjtester-kubeconfig
    volumeMounts:
      - name: pjtester-kubeconfig
        mountPath: /etc/kubeconfig/pjtester
        readOnly: true
  - labels:
      preset-sa-prow-job-resource-cleaner: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-prow-job-resource-cleaner/service-account.json
    volumes:
      - name: sa-prow-job-resource-cleaner
        secret:
          secretName: sa-prow-job-resource-cleaner
    volumeMounts:
      - name: sa-prow-job-resource-cleaner
        mountPath: /etc/credentials/sa-prow-job-resource-cleaner
        readOnly: true
  - labels:
      preset-certificates-bucket: "true"
    env:
      - name: CERTIFICATES_BUCKET
        value: "kyma-prowjobs-secrets"
  - labels:
      preset-gke-kyma-developers-group: "true"
    env:
      - name: GCLOUD_SECURITY_GROUP
        value: "kyma_developers"
      - name: GCLOUD_SECURITY_GROUP_DOMAIN
        value: "sap.com"
  - labels:
      preset-gc-compute-envs: "true"
    env:
      - name: CLOUDSDK_COMPUTE_REGION
        value: "europe-west4"
  - labels:
      preset-gc-project-env: "true"
    env:
      - name: CLOUDSDK_CORE_PROJECT
        value: "sap-kyma-prow-workloads"
  - labels:
      preset-kms-gc-project-env: "true"
    env:
      - name: CLOUDSDK_KMS_PROJECT
        value: "sap-kyma-prow-workloads"
  - labels:
      preset-sa-vm-kyma-integration: "true" # Service account with "Compute Admin" and "Compute OS Admin Login" roles
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-vm-kyma-integration/service-account.json
    volumes:
      - name: sa-vm-kyma-integration
        secret:
          secretName: sa-vm-kyma-integration
    volumeMounts:
      - name: sa-vm-kyma-integration
        mountPath: /etc/credentials/sa-vm-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gke-kyma-integration: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gke-kyma-integration/service-account.json
      - name: CLOUDSDK_DNS_ZONE_NAME
        value: "build-kyma-workloads" #GCloud DNS Zone Name (NOT it's DNS name!)
      - name: KYMA_PROJECT_DIR
        value: "/home/prow/go/src/github.com/kyma-project"
    volumes:
      - name: sa-gke-kyma-integration
        secret:
          secretName: sa-gke-kyma-integration
    volumeMounts:
      - name: sa-gke-kyma-integration
        mountPath: /etc/credentials/sa-gke-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gcr-push: "true" # Service account with "Storage Admin" role
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gcr-push-kyma-project/service-account.json
    volumes:
      - name: sa-gcr-push-kyma-project
        secret:
          secretName: sa-gcr-push-kyma-project
    volumeMounts:
      - name: sa-gcr-push-kyma-project
        mountPath: /etc/credentials/sa-gcr-push-kyma-project
        readOnly: true
  - labels:
      preset-sa-test-gcr-push: "true" # Service account with write access to test gcr.
    env:
      - name: GCR_PUSH_GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-test-gcr-push/service-account.json
    volumes:
      - name: sa-test-gcr-push
        secret:
          secretName: sa-gcr-push-kyma-project
    volumeMounts:
      - name: sa-test-gcr-push
        mountPath: /etc/credentials/sa-test-gcr-push
        readOnly: true
  - labels:
      preset-sa-kyma-artifacts: "true"
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /etc/credentials/sa-kyma-artifacts/service-account.json
    volumes:
    - name: sa-kyma-artifacts
      secret:
        secretName: sa-kyma-artifacts
    volumeMounts:
    - name: sa-kyma-artifacts
      mountPath: /etc/credentials/sa-kyma-artifacts
  - labels:
      preset-sa-gardener-logs: "true"
    env:
    - name: SA_GARDENER_LOGS
      value: /etc/credentials/sa-gardener-logs/service-account.json
    volumes:
    - name: sa-gardener-logs
      secret:
        secretName: sa-gardener-logs
    volumeMounts:
    - name: sa-gardener-logs
      mountPath: /etc/credentials/sa-gardener-logs
      readOnly: true
  - labels:
      preset-gardener-azure-kyma-integration: "true"
    env:
    - name: GARDENER_KYMA_PROW_KUBECONFIG
      value: /etc/credentials/gardener-kyma-prow/kubeconfig
    - name: GARDENER_KYMA_PROW_PROJECT_NAME
      value: "kyma-prow"
    - name: GARDENER_KYMA_PROW_PROVIDER_SECRET_NAME
      value: "kyma-azure"
    volumes:
    - name: gardener-kyma-prow-kubeconfig
      secret:
        secretName: gardener-kyma-prow-kubeconfig
    volumeMounts:
    - name: gardener-kyma-prow-kubeconfig
      mountPath: /etc/credentials/gardener-kyma-prow
  - labels:
      preset-gardener-gcp-kyma-integration: "true"
    env:
    - name: GARDENER_KYMA_PROW_KUBECONFIG
      value: /etc/credentials/gardener-kyma-prow/kubeconfig
    - name: GARDENER_KYMA_PROW_PROJECT_NAME
      value: "kyma-prow"
    - name: GARDENER_KYMA_PROW_PROVIDER_SECRET_NAME
      value: "kyma-gcp-workloads"
    volumes:
    - name: gardener-kyma-prow-kubeconfig
      secret:
        secretName: gardener-kyma-prow-kubeconfig
    volumeMounts:
    - name: gardener-kyma-prow-kubeconfig
      mountPath: /etc/credentials/gardener-kyma-prow
  - labels:
      preset-gardener-aws-kyma-integration: "true"
    env:
    - name: GARDENER_KYMA_PROW_KUBECONFIG
      value: /etc/credentials/gardener-kyma-prow/kubeconfig
    - name: GARDENER_KYMA_PROW_PROJECT_NAME
      value: "kyma-prow"
    - name: GARDENER_KYMA_PROW_PROVIDER_SECRET_NAME
      value: "prow-dev-aws"
    volumes:
    - name: gardener-kyma-prow-kubeconfig
      secret:
        secretName: gardener-kyma-prow-kubeconfig
    volumeMounts:
    - name: gardener-kyma-prow-kubeconfig
      mountPath: /etc/credentials/gardener-kyma-prow
  - labels:
      preset-creds-aks-kyma-integration: "true"
    env:
    - name: AZURE_SUBSCRIPTION_ID
      valueFrom:
        secretKeyRef:
          name: kyma-azure-credential-id
          key: subscription-id
    - name: AZURE_SUBSCRIPTION_APP_ID
      valueFrom:
        secretKeyRef:
          name: kyma-azure-credential-app-id
          key: subscription-app-id
    - name: AZURE_SUBSCRIPTION_SECRET
      valueFrom:
        secretKeyRef:
          name: kyma-azure-credential-secret
          key: subscription-secret
    - name: AZURE_SUBSCRIPTION_TENANT
      valueFrom:
        secretKeyRef:
          name: kyma-azure-credential-tenant
          key: subscription-tenant
  - labels:
      preset-dind-enabled: "true"
    env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
    volumes:
      - name: docker-graph
        emptyDir: {}
    volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
  - labels:
      preset-docker-push-repository: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project"
  - labels:
      preset-docker-push-repository-kyma: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project"
  - labels:
      preset-docker-push-repository-gke-integration: "true" # Needed for kyma installer image
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/sap-kyma-prow"
  - labels:
      preset-docker-push-repository-test-infra: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/test-infra"
  - labels:
      preset-docker-push-repository-incubator: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/incubator"
  - labels:
      preset-docker-push-repository-control-plane: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/control-plane"
  - labels:
      preset-docker-push-repository-global: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "gcr.io/kyma-project"
  - labels:
      preset-build-pr: "true"
    env:
      - name: BUILD_TYPE
        value: pr
      - name: DOCKER_PUSH_DIRECTORY
        value: "/pr"
  - labels:
      preset-build-master: "true"
    env:
      - name: BUILD_TYPE
        value: master
      - name: DOCKER_PUSH_DIRECTORY
        value: "/develop"
  - labels:
      preset-build-artifacts-master: "true"
    env:
      - name: BUILD_TYPE
        value: master
  - labels:
      preset-build-console-master: "true"
    env:
      - name: BUILD_TYPE
        value: master
  - labels:
      preset-build-release: "true"
    env:
      - name: BUILD_TYPE
        value: release
  - labels:
      preset-bot-npm-token: "true"
    env:
      - name: BOT_NPM_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-npm-token
            key: token
  # Kyma-bot
  - labels:
      preset-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-github-token
            key: token
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-github-token
            key: token
  - labels:
      preset-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kyma.bot@sap.com"
      - name: BOT_GITHUB_USER
        value: "Kyma Bot"
  # Kyma-website-bot
  - labels:
      preset-website-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-website-bot-github-token
            key: token
  - labels:
      preset-website-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kymaopensource@gmail.com"
      - name: BOT_GITHUB_USER
        value: "kyma-website-bot"
  - labels:
      preset-website-bot-github-ssh: "true"
    env:
      - name: BOT_GITHUB_SSH_PATH
        value: /etc/credentials/kyma-website-bot-github-ssh/key.pem
    volumes:
      - name: kyma-website-bot-github-ssh
        secret:
          secretName: kyma-website-bot-github-ssh
    volumeMounts:
      - name: kyma-website-bot-github-ssh
        mountPath: /etc/credentials/kyma-website-bot-github-ssh
        readOnly: true
  - labels:
      preset-website-bot-zenhub-token: "true"
    env:
    - name: BOT_ZENHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: kyma-website-bot-zenhub-token
          key: token
  # Kyma Guard Bot
  - labels:
      preset-kyma-guard-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-guard-bot-github-token
            key: token
  - labels:
      preset-kyma-guard-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kymabotguard@gmail.com"
      - name: BOT_GITHUB_USER
        value: "kyma-guard-bot"
  - labels:
      preset-sap-slack-bot-token: "true"
    env:
    - name: SAP_SLACK_BOT_TOKEN
      valueFrom:
        secretKeyRef:
          name: sap-slack-bot-token
          key: token
  - labels:
      preset-kyma-artifacts-bucket: "true"
    env:
      - name: KYMA_ARTIFACTS_BUCKET
        value: gs://kyma-prow-artifacts
  - labels:
      preset-kyma-cli-stable: "true"
    env:
      - name: KYMA_CLI_STABLE_BUCKET
        value: gs://kyma-cli-stable
      - name: STABLE
        value: "true"
  - labels:
      preset-stability-checker-slack-notifications: "true"
    env:
      - name: SLACK_CLIENT_WEBHOOK_URL
        value: https://sap-ti.slack.com/services/hooks/jenkins-ci
      - name: SLACK_CLIENT_TOKEN
        valueFrom:
          secretKeyRef:
            name: slack-nightly-token
            key: token
  - labels:
      preset-nightly-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: nightly-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nightly-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-weekly-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: weekly-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: weekly-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-nightly-aks-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: nightly-aks-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nightly-aks-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-kyma-keyring: "true"
    env:
      - name: KYMA_KEYRING
        value: "prow-workloads-keyring"
  - labels:
      preset-kyma-development-artifacts-bucket: "true"
    env:
      - name: KYMA_DEVELOPMENT_ARTIFACTS_BUCKET
        value: "gs://kyma-development-artifacts"
  - labels:
      preset-kyma-encryption-key: "true"
    env:
      - name: KYMA_ENCRYPTION_KEY
        value: prow-workloads-encrypt
  - labels:
     preset-kyma-slack-channel: "true"
    env:
      - name: SLACK_CHANNEL
        value: CBMPTMCV9
  - labels:
      preset-kyma-wssagent-config: "true"
    env:
      - name: PRODUCTNAME
        value: "OOSS - KYMA"
  # stable release version of gke
  - labels:
      preset-gke-ver-stable: "true"
    env:
      - name: CLUSTER_VERSION
        value: "1.16"
      - name: RELEASE_CHANNEL
        value: regular
  # volume mounts for kind
  - labels:
      preset-kind-volume-mounts: "true"
    volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
    volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
  - labels:
      preset-cluster-use-ssd: "true"
    env:
    - name: CLUSTER_USE_SSD
      value: "true"
  # whitesource labels
  - labels:
      preset-wssagent-keys: "true"
    env:
      - name: WHITESOURCE_APIKEY
        value: /etc/credentials/whitesource-apikey/apikey
      - name: WHITESOURCE_USERKEY
        value: /etc/credentials/whitesource-userkey/userkey
    volumes:
      - name: whitesource-apikey
        secret:
          secretName: whitesource-apikey
      - name: whitesource-userkey
        secret:
          secretName: whitesource-userkey
    volumeMounts:
      - name: whitesource-apikey
        mountPath: /etc/credentials/whitesource-apikey
        readOnly: true
      - name: whitesource-userkey
        mountPath: /etc/credentials/whitesource-userkey
        readOnly: true
  - labels:
      preset-sa-gke-kyma-integration-kyma-incubator-whitesource: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gke-kyma-integration/service-account.json
      - name: CLOUDSDK_DNS_ZONE_NAME
        value: "build-kyma-workloads" #GCloud DNS Zone Name (NOT it's DNS name!)
      - name: GITHUB_ORG_DIR
        value: "/home/prow/go/src/github.com/kyma-incubator"
    volumes:
      - name: sa-gke-kyma-integration
        secret:
          secretName: sa-gke-kyma-integration
    volumeMounts:
      - name: sa-gke-kyma-integration
        mountPath: /etc/credentials/sa-gke-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gke-kyma-integration-kyma-project-whitesource: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gke-kyma-integration/service-account.json
      - name: CLOUDSDK_DNS_ZONE_NAME
        value: "build-kyma-workloads" #GCloud DNS Zone Name (NOT it's DNS name!)
      - name: GITHUB_ORG_DIR
        value: "/home/prow/go/src/github.com/kyma-project"
    volumes:
      - name: sa-gke-kyma-integration
        secret:
          secretName: sa-gke-kyma-integration
    volumeMounts:
      - name: sa-gke-kyma-integration
        mountPath: /etc/credentials/sa-gke-kyma-integration
        readOnly: true

plank:
  job_url_template: 'https://status.build.kyma-project.io/view/gcs/kyma-prow-logs/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  job_url_prefix_config:
    '*': https://status.build.kyma-project.io/view/gcs/
  allow_cancellations: true # AllowCancellations enables aborting presubmit jobs for commits that have been superseded by newer commits in Github pull requests.
  max_concurrency: 100 # Limit of concurrent ProwJobs. Need to be adjusted depending of the cluster size.
  pod_pending_timeout: 60m
  default_decoration_configs:
    '*':
      timeout: 3h
      grace_period: 10m
      utility_images:
        clonerefs: "eu.gcr.io/kyma-project/test-infra/clonerefs:v20200414-6b49853d"
        initupload: "gcr.io/k8s-prow/initupload:v20200319-1aea24112"
        entrypoint: "gcr.io/k8s-prow/entrypoint:v20200319-1aea24112"
        sidecar: "gcr.io/k8s-prow/sidecar:v20200319-1aea24112"
      gcs_configuration:
        bucket: kyma-prow-logs
        path_strategy: "explicit"
      gcs_credentials_secret: "sa-gcs-plank" # Service account with "Object Admin" role

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    gcs_browser_prefix: https://gcsweb.build.kyma-project.io/gcs/
    testgrid_config: gs://k8s-testgrid/config
    testgrid_root: https://testgrid.k8s.io/
    lenses:
      - lens:
          name: metadata
        required_files:
          - started.json|finished.json
      - lens:
          name: buildlog
        required_files:
          - build-log.txt
      - lens:
          name: junit
        required_files:
          - artifacts/junit.*\.xml
  branding:
    header_color: "#0b74de" # Kyma color
    logo: "/static/extensions/logo.svg"
    favicon: "/static/extensions/favicon.png"
  rerun_auth_config:
    github_team_ids:
    - 3108790 # cluster-access GH team in Kyma organization

sinker:
  max_pod_age: 5h

push_gateway:
  endpoint: pushgateway
  interval: 10s
  serve_metrics: true

slack_reporter_configs:
  '*':
    job_types_to_report:
      - postsubmit
      - periodic
      - batch
    job_states_to_report:
      - failure
      - error
    channel: kyma-ci-force
    report_template: |
      *Name:* {{.Spec.Job}}
      *Type:* {{.Spec.Type}}
      *Status:* {{.Status.State}}
      {{with .Spec.Refs}}*Repository:* {{.Org}}/{{.Repo}}
      *Commit:* <{{.BaseLink}}|{{printf "%.7s" .BaseSHA}}>
      {{end}}*<{{.Status.URL}}|View logs>*
