# Code generated by rendertemplates. DO NOT EDIT. 

presets:
  - labels:
      preset-gc-compute-envs: "true"
    env:
      - name: CLOUDSDK_COMPUTE_REGION
        value: "europe-west4"
  - labels:
      preset-gc-project-env: "true"
    env:
      - name: CLOUDSDK_CORE_PROJECT
        value: "sap-kyma-prow-workloads"
  - labels:
      preset-kms-gc-project-env: "true"
    env:
      - name: CLOUDSDK_KMS_PROJECT
        value: "sap-kyma-prow"
  - labels:
      preset-sa-vm-kyma-integration: "true" # Service account with "Compute Admin" and "Compute OS Admin Login" roles
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-vm-kyma-integration/service-account.json
    volumes:
      - name: sa-vm-kyma-integration
        secret:
          secretName: sa-vm-kyma-integration
    volumeMounts:
      - name: sa-vm-kyma-integration
        mountPath: /etc/credentials/sa-vm-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gke-kyma-integration: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gke-kyma-integration/service-account.json
      - name: CLOUDSDK_DNS_ZONE_NAME
        value: "build-kyma-workloads" #GCloud DNS Zone Name (NOT it's DNS name!)
      - name: KYMA_PROJECT_DIR
        value: "/home/prow/go/src/github.com/kyma-project"
    volumes:
      - name: sa-gke-kyma-integration
        secret:
          secretName: sa-gke-kyma-integration
    volumeMounts:
      - name: sa-gke-kyma-integration
        mountPath: /etc/credentials/sa-gke-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gcr-push: "true" # Service account with "Storage Admin" role
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gcr-push-kyma-project/service-account.json
    volumes:
      - name: sa-gcr-push-kyma-project
        secret:
          secretName: sa-gcr-push-kyma-project
    volumeMounts:
      - name: sa-gcr-push-kyma-project
        mountPath: /etc/credentials/sa-gcr-push-kyma-project
        readOnly: true
  - labels:
      preset-sa-kyma-artifacts: "true"
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /etc/credentials/sa-kyma-artifacts/service-account.json
    volumes:
    - name: sa-kyma-artifacts
      secret:
        secretName: sa-kyma-artifacts
    volumeMounts:
    - name: sa-kyma-artifacts
      mountPath: /etc/credentials/sa-kyma-artifacts
  - labels:
      preset-knative-sa: "true" # Created for knative tests
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /etc/credentials/knative-sa/service-account.json
    volumes:
    - name: knative-sa
      secret:
        secretName: knative-sa
    volumeMounts:
    - name: knative-sa
      mountPath: /etc/credentials/knative-sa
  - labels:
      preset-creds-aks-kyma-integration: "true"
    env:
    - name: AZURE_SUBSCRIPTION_ID
      valueFrom:
        secretKeyRef:
          name: kyma-azure-credential-id
          key: subscription-id
    - name: AZURE_SUBSCRIPTION_APP_ID
      valueFrom:
        secretKeyRef:
          name: kyma-azure-credential-app-id
          key: subscription-app-id
    - name: AZURE_SUBSCRIPTION_SECRET
      valueFrom:
        secretKeyRef:
          name: kyma-azure-credential-secret
          key: subscription-secret
    - name: AZURE_SUBSCRIPTION_TENANT
      valueFrom:
        secretKeyRef:
          name: kyma-azure-credential-tenant
          key: subscription-tenant
  - labels:
      preset-dind-enabled: "true"
    env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
    volumes:
      - name: docker-graph
        emptyDir: {}
    volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
  - labels:
      preset-docker-push-repository: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project"
  - labels:
      preset-docker-push-repository-kyma: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project"
  - labels:
      preset-docker-push-repository-gke-integration: "true" # Needed for kyma installer image
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/sap-kyma-prow"
  - labels:
      preset-docker-push-repository-test-infra: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/test-infra"
  - labels:
      preset-docker-push-repository-incubator: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/incubator"
  - labels:
      preset-docker-push-repository-global: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "gcr.io/kyma-project"
  - labels:
      preset-build-pr: "true"
    env:
      - name: BUILD_TYPE
        value: pr
      - name: DOCKER_PUSH_DIRECTORY
        value: "/pr"
  - labels:
      preset-build-master: "true"
    env:
      - name: BUILD_TYPE
        value: master
      - name: DOCKER_PUSH_DIRECTORY
        value: "/develop"
  - labels:
      preset-build-console-master: "true"
    env:
      - name: BUILD_TYPE
        value: master
  - labels:
      preset-build-release: "true"
    env:
      - name: BUILD_TYPE
        value: release
  - labels:
      preset-bot-npm-token: "true"
    env:
      - name: BOT_NPM_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-npm-token
            key: token
  # Kyma-bot
  - labels:
      preset-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-github-token
            key: token
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-github-token
            key: token
  - labels:
      preset-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kyma.bot@sap.com"
      - name: BOT_GITHUB_USER
        value: "Kyma Bot"
  - labels:
      preset-bot-github-ssh: "true"
    env:
      - name: BOT_GITHUB_SSH_PATH
        value: /etc/credentials/kyma-bot-github-ssh/key.pem
    volumes:
      - name: kyma-bot-github-ssh
        secret:
          secretName: kyma-bot-github-ssh
    volumeMounts:
      - name: kyma-bot-github-ssh
        mountPath: /etc/credentials/kyma-bot-github-ssh
        readOnly: true
  # Kyma-website-bot
  - labels:
      preset-website-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-website-bot-github-token
            key: token
  - labels:
      preset-website-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kymaopensource@gmail.com"
      - name: BOT_GITHUB_USER
        value: "kyma-website-bot"
  - labels:
      preset-website-bot-github-ssh: "true"
    env:
      - name: BOT_GITHUB_SSH_PATH
        value: /etc/credentials/kyma-website-bot-github-ssh/key.pem
    volumes:
      - name: kyma-website-bot-github-ssh
        secret:
          secretName: kyma-website-bot-github-ssh
    volumeMounts:
      - name: kyma-website-bot-github-ssh
        mountPath: /etc/credentials/kyma-website-bot-github-ssh
        readOnly: true
  - labels:
      preset-website-bot-zenhub-token: "true"
    env:
    - name: BOT_ZENHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: kyma-website-bot-zenhub-token
          key: token
  # Kyma Guard Bot
  - labels:
      preset-kyma-guard-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-guard-bot-github-token
            key: token
  - labels:
      preset-kyma-guard-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kymabotguard@gmail.com"
      - name: BOT_GITHUB_USER
        value: "kyma-guard-bot"
  - labels:
      preset-kyma-snyk-token: "true"
    env:
    - name: SNYK_TOKEN
      valueFrom:
        secretKeyRef:
          name: kyma-snyk-token
          key: secret
  - labels:
      preset-sap-slack-bot-token: "true"
    env:
    - name: SAP_SLACK_BOT_TOKEN
      valueFrom:
        secretKeyRef:
          name: sap-slack-bot-token
          key: token
  - labels:
      preset-kyma-artifacts-bucket: "true"
    env:
      - name: KYMA_ARTIFACTS_BUCKET
        value: gs://kyma-prow-artifacts
  - labels:
      preset-kyma-backup-restore-bucket: "true"
    env:
      - name: KYMA_BACKUP_RESTORE_BUCKET
        value: kyma-backup-restore
  - labels:
      preset-kyma-backup-credentials: "true"
    env:
    - name: KYMA_BACKUP_CREDENTIALS
      value: /etc/credentials/sa-kyma-backup-restore/service-account.json
    volumes:
      - name: sa-kyma-backup-restore
        secret:
          secretName: sa-kyma-backup-restore
    volumeMounts:
      - name: sa-kyma-backup-restore
        mountPath: /etc/credentials/sa-kyma-backup-restore
        readOnly: true
  - labels:
      preset-stability-checker-slack-notifications: "true"
    env:
      - name: SLACK_CLIENT_WEBHOOK_URL
        value: https://sap-cx.slack.com/services/hooks/jenkins-ci
      - name: SLACK_CLIENT_TOKEN
        valueFrom:
          secretKeyRef:
            name: slack-nightly-token
            key: token
  - labels:
      preset-nightly-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: nightly-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nightly-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-weekly-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: weekly-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: weekly-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-nightly-aks-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: nightly-aks-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nightly-aks-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-kyma-keyring: "true"
    env:
      - name: KYMA_KEYRING
        value: "kyma-prow"
  - labels:
      preset-kyma-development-artifacts-bucket: "true"
    env:
      - name: KYMA_DEVELOPMENT_ARTIFACTS_BUCKET
        value: "gs://kyma-development-artifacts"
  - labels:
      preset-kyma-encryption-key: "true"
    env:
      - name: KYMA_ENCRYPTION_KEY
        value: kyma-prow-encryption
  - labels:
     preset-kyma-slack-channel: "true"
    env:
      - name: SLACK_CHANNEL
        value: CBMPTMCV9
  - labels:
      preset-kyma-wssagent-config: "true"
    env:
      - name: PRODUCTNAME
        value: "OOSS - KYMA"
  # volume mounts for kind
  - labels:
      preset-kind-volume-mounts: "true"
    volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
    volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

branch-protection:
  enforce_admins: false
  required_pull_request_reviews:
    dismiss_stale_reviews: false
    require_code_owner_reviews: true
    required_approving_review_count: 1
  # all jobs that have ContextRequired() set to true are also treated as required_status_checks, so there is no point to mention it here.
  required_status_checks:
    contexts:
      - license/cla
  orgs:
    kyma-project:
      protect: true # protect all repos & branches in kyma-project org
      repos:
        kyma:
          branches:
            release-1.6:
              required_status_checks:
                contexts:
                  - pre-rel16-kyma-integration
                  - pre-rel16-kyma-gke-integration
                  - pre-rel16-kyma-gke-upgrade
                  - pre-rel16-kyma-gke-backup
                  - pre-rel16-kyma-gke-central-connector
                  - pre-rel16-kyma-artifacts
                  - pre-rel16-kyma-installer
                  - pre-rel16-kyma-gke-minio-gcs-gateway
                  - pre-rel16-kyma-gke-minio-az-gateway
                  - pre-rel16-kyma-gke-minio-gcs-gateway-migration
                  - pre-rel16-kyma-gke-minio-az-gateway-migration
            release-1.5:
              required_status_checks:
                contexts:
                  - pre-rel15-kyma-integration
                  - pre-rel15-kyma-gke-integration
                  - pre-rel15-kyma-gke-upgrade
                  - pre-rel15-kyma-gke-backup
                  - pre-rel15-kyma-gke-central-connector
                  - pre-rel15-kyma-artifacts
                  - pre-rel15-kyma-installer
                  - pre-rel15-kyma-gke-minio-gateway
                  - pre-rel15-kyma-gke-minio-gateway-migration
            release-1.4:
              required_status_checks:
                contexts:
                  - pre-rel14-kyma-integration
                  - pre-rel14-kyma-gke-integration
                  - pre-rel14-kyma-gke-upgrade
                  - pre-rel14-kyma-gke-backup
                  - pre-rel14-kyma-gke-central-connector
                  - pre-rel14-kyma-artifacts
                  - pre-rel14-kyma-installer
                  - pre-rel14-kyma-gke-minio-gateway
                  - pre-rel14-kyma-gke-minio-gateway-migration
        website:
          required_status_checks:
            contexts:
              - "netlify/kyma-project/deploy-preview"
        cli:
          branches:
            master:
              protect: true
        helm-broker:
          branches:
            master:
              protect: true
    kyma-incubator:
      repos:
        varkes:
          branches:
            master:
              protect: true
        vstudio-extension:
          branches:
            master:
              protect: true
        service-catalog-tester:
          branches:
            master:
              protect: true
        gcp-service-broker:
          branches:
            master:
              protect: true
        octopus:
          branches:
            master:
              protect: true
        podpreset-crd:
          branches:
            master:
              protect: true
        compass:
          branches:
            master:
              protect: true
        marketplaces:
          protect: true
        documentation-component:
          protect: true
        hack-showcase:
          branches:
            master:
              protect: true

plank:
  job_url_template: 'https://status.build.kyma-project.io/view/gcs/kyma-prow-logs/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  job_url_prefix: 'https://status.build.kyma-project.io/view/gcs/'
  allow_cancellations: true # AllowCancellations enables aborting presubmit jobs for commits that have been superseded by newer commits in Github pull requests.
  max_concurrency: 50 # Limit of concurrent ProwJobs. Need to be adjusted depending of the cluster size.
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 600000000000 # 10min
    utility_images:
      clonerefs: "gcr.io/k8s-prow/clonerefs:v20190312-abfe0e0"
      initupload: "gcr.io/k8s-prow/initupload:v20190312-abfe0e0"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20190312-abfe0e0"
      sidecar: "gcr.io/k8s-prow/sidecar:v20190312-abfe0e0"
    gcs_configuration:
      bucket: kyma-prow-logs
      path_strategy: "explicit"
    gcs_credentials_secret: "sa-gcs-plank" # Service account with "Object Admin" role

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    gcs_browser_prefix: https://gcsweb.build.kyma-project.io/gcs/
    viewers:
      "started.json|finished.json":
      - "metadata"
      "build-log.txt":
      - "buildlog"
      "artifacts/junit.*\\.xml":
      - "junit"
  branding:
    header_color: "#0b74de" # Kyma color
    logo: "extensions/logo.svg"
    favicon: "extensions/favicon.png"

sinker:
  max_pod_age: 5h

push_gateway:
  endpoint: pushgateway
  interval: 10s
