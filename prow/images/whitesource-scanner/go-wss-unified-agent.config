####################################################################
# WhiteSource Unified-Agent configuration file
####################################################################
##########################################
# GENERAL SCAN MODE: Files and Package Managers
##########################################
  
checkPolicies=false
forceCheckAllDependencies=false
forceUpdate=true
forceUpdate.failBuildOnPolicyViolation=false
offline=false
ignoreSourceFiles=true
#scanComment=
#updateInventory=false
resolveAllDependencies=false
failErrorLevel=ALL
#requireKnownSha1=false
#generateProjectDetailsJson=true
#generateScanReport=true
#scanReportTimeoutMinutes=10
#scanReportFilenameFormat=
#excludeDependenciesFromNodes=.*commons-io.*,.*maven-model

#projectPerFolder=true
#projectPerFolderIncludes=
#projectPerFolderExcludes=

#analyzeFrameworks=true
#analyzeFrameworksReference=

#wss.connectionTimeoutMinutes=60
# Change the below URL to your WhiteSource server.
# Use the 'WhiteSource Server URL' which can be retrieved
# from your 'Profile' page on the 'Server URLs' panel.
# Then, add the '/agent' path to it.
wss.url=https://sap.whitesourcesoftware.com/agent


#bower.resolveDependencies=false
#bower.ignoreSourceFiles=true
#bower.runPreStep=true

#gradle.ignoredScopes=
#gradle.resolveDependencies=false
#gradle.runAssembleCommand=false
#gradle.runPreStep=true
#gradle.ignoreSourceFiles=true
#gradle.aggregateModules=true
#gradle.preferredEnvironment=wrapper
#gradle.localRepositoryPath=

#paket.resolveDependencies=false
#paket.ignoredGroups=
#paket.ignoreSourceFiles=false
#paket.runPreStep=true
#paket.exePath=


# GO dependency resolver part
################################
# resolveDependencies parameter is important and need to be true
go.resolveDependencies=true
# ignoreSourceFiles parameter is important and need to be true
go.ignoreSourceFiles=true
go.collectDependenciesAtRuntime=true
# dependencyManager: Determines the Go dependency manager to use when scanning a Go project.
# Valid values are 'dep', 'godep', 'vndr', 'gogradle', 'glide', 'govendor', 'gopm', 'vgo' and 'modules'.
# If empty, then the Unified Agent will try to resolve the dependencies using each one 
# of the package managers above.
go.dependencyManager=dep
#go.glide.ignoreTestPackages=false
#go.gogradle.enableTaskAlias=true

#html.resolveDependencies=false

##################################
# Organization tokens:
##################################
apiKey=

#userKey is required if WhiteSource administrator has enabled "Enforce user level access" option
userKey=

projectName=
projectVersion=
projectToken=

productName=
productVersion=
productToken=
#updateType=APPEND
#requesterEmail=user@provider.com

#########################################################################################
# Includes/Excludes Glob patterns - PLEASE USE ONLY ONE EXCLUDE LINE AND ONE INCLUDE LINE
#########################################################################################
#includes=**/*.c **/*.cc **/*.cp **/*.cpp **/*.cxx **/*.c++ **/*.h **/*.hpp **/*.hxx **/*.js
includes=**/*.go **/*.mod **/*.sum **/*.lock **/*.toml 

#includes=**/*.m **/*.mm  **/*.js **/*.php
#includes=**/*.jar
#includes=**/*.gem **/*.rb
#includes=**/*.dll **/*.cs **/*.nupkg
#includes=**/*.tgz **/*.deb **/*.gzip **/*.rpm **/*.tar.bz2
#includes=**/*.zip **/*.tar.gz **/*.egg **/*.whl **/*.py

## Exclude file extensions or specific directories by adding **/*.<extension> or **/<excluded_dir>/**
# exclude all Kyma tests components which are not deployed to the production cluster and could be skipped from the ws scan
# excludes=**/tests/**

case.sensitive.glob=false
followSymbolicLinks=true
