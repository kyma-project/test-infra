apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
  namespace: default
  labels:
    app: web-server
spec:
  selector:
    matchLabels:
      app: web-server
  template:
    metadata:
      labels:
        app: web-server
    spec:
      containers:
      - name: nginx
        image: docker.io/library/nginx:1.25.2-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/
        - name: static-files
          mountPath: /usr/share/nginx/html/
        livenessProbe:
          httpGet:
            path: /robots.txt
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /robots.txt
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 30
      volumes:
      - name: config
        configMap:
          name: web-server-config
      - name: static-files
        configMap:
          name: static-files
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-server-config
  namespace: default
data:
  default.conf: |
    server {
      listen       80;
      server_name  _;

      location / {
        root /usr/share/nginx/html/;
      }

      location = /50x.html {
        root   /usr/share/nginx/html;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: web-server
  namespace: default
  labels:
    app: web-server
spec:
  type: NodePort
  selector:
    app: web-server
  ports:
  - name: http
    port: 80
