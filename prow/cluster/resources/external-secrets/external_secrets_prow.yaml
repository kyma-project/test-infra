apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cookie # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: secret # k8s key name
      remoteRef:
        key: prow_default_cookie # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: github-oauth-config # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: secret # k8s key name
      remoteRef:
        key: prow_default_github-oauth-config # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: hmac-token # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: hmac # k8s key name
      remoteRef:
        key: prow_default_hmac-token # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: oauth-token # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: oauth # k8s key name
      remoteRef:
        key: prow_default_oauth-token # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sap-slack-bot-token # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: token # k8s key name
      remoteRef:
        key: prow_default_sap-slack-bot-token # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: slack-token # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: token # k8s key name
      remoteRef:
        key: prow_default_slack-token # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: workload-clusters-kubeconfig # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: config # k8s key name
      remoteRef:
        key: prow_default_workload-clusters-kubeconfig # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: untrusted-workload-kubeconfig # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: config # k8s key name
      remoteRef:
        key: untrusted-workload-kubeconfig # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: trusted-workload-kubeconfig # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: config # k8s key name
      remoteRef:
        key: trusted-workload-kubeconfig # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sa-prow-plugin-automerge-notification # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: credentials.json # k8s key name
      remoteRef:
        key: sa_prow-plugin-automerge-notifica # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kyma-bot-github-sap-token # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: token # k8s key name
      remoteRef:
        key: trusted_default_kyma-bot-github-sap-token # GCP secret name
        version: latest
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: neighbors-dev-bot-github-token # name of the k8s external secret and the k8s secret
  namespace: default
spec:
  secretStoreRef:
    name: gcp-secretstore
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    deletionPolicy: "Delete" # delete secret when External Secret is deleted
  data:
    - secretKey: oauth # k8s key name
      remoteRef:
        key: neighbors-dev-bot-github-token # GCP secret name
        version: latest
