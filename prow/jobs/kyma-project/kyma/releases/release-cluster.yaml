postsubmits:
  kyma-project/kyma:
    - name: post-kyma-release-cluster
      annotations:
        description: "GCP Release cluster job for Kyma"
        owner: "neighbors"
      labels:
        prow.k8s.io/pubsub.project: "sap-kyma-prow"
        prow.k8s.io/pubsub.runID: "post-kyma-release-cluster"
        prow.k8s.io/pubsub.topic: "prowjobs"
        preset-sa-gke-kyma-integration: "true"
        preset-gc-project-env: "true"
        preset-gc-compute-envs: "true"
        preset-cluster-version: "true"
      decorate: true
      always_run: true
      branches: # official regexp https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
        - ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
      cluster: trusted-workload
      reporter_config:
        slack:
          channel: kyma-skr-release
      spec:
        containers:
          - image: "europe-docker.pkg.dev/kyma-project/prod/testimages/e2e-gcloud:v20240409-60850d30"
            securityContext:
              privileged: false
              seccompProfile:
                type: RuntimeDefault
              allowPrivilegeEscalation: false
            command: ["bash", "-c"]
            args:
              - |-
                set -e
                OS="$(uname -s)"
                ARCH="$(uname -m)"
                curl -Lo kyma.tar.gz "https://github.com/kyma-project/cli/releases/latest/download/kyma_${OS}_${ARCH}.tar.gz" && tar -zxvf kyma.tar.gz && chmod +x ./kyma && rm -f kyma.tar.gz
                gcloud auth activate-service-account --key-file "${GOOGLE_APPLICATION_CREDENTIALS}"
                CLUSTER_NAME="gke-release-${PULL_BASE_REF//./-}"
                echo ">>> create networks for a cluster"
                NET_NAME="${CLUSTER_NAME}-net"
                SUBNET_NAME="${CLUSTER_NAME}-subnet"
                gcloud compute networks create "$NET_NAME" \
                  --project="$CLOUDSDK_CORE_PROJECT" \
                  --subnet-mode=custom
                gcloud compute networks subnets create "$SUBNET_NAME" \
                --network="$NET_NAME" \
                --range=10.0.0.0/22
                echo "Provisioning cluster $CLUSTER_NAME"
                NOW="$(date +%s)"
                gcloud beta container clusters create "$CLUSTER_NAME" \
                  --project="$CLOUDSDK_CORE_PROJECT" \
                  --cluster-version="$GKE_CLUSTER_VERSION" \
                  --region="$CLOUDSDK_COMPUTE_REGION" \
                  --machine-type=n2-standard-4 \
                  --num-nodes=1 \
                  --security-"group=gke-security-groups@sap.com" \
                  --disk-type=pd-ssd \
                  --preemptible \
                  --labels=created-at=$NOW,ttl=168,volatile=true
                
                echo ">>> Install Kyma from local sources"
                ./kyma deploy --ci \
                  --source=local \
                  --workspace=. \
                  --profile=production \
                  --timeout 60m
                
                echo ">>> create cluster-admin binding for kyma_developers@sap.com"
                kubectl create clusterrolebinding kyma_developers --clusterrole cluster-admin --group kyma_developers@sap.com
                
                echo ">>> generate service account and kubeconfig with cluster-admin rights"
                namespace="default"
                serviceAccount="admin-user"
                secretName="$serviceAccount-secret"

                server="https://$(gcloud container clusters describe "$CLUSTER_NAME" --region "$CLOUDSDK_COMPUTE_REGION" | awk '/endpoint:/ {print $2}')"
                kubectl create serviceaccount -n "$namespace" "$serviceAccount"
                kubectl apply -f - <<EOF
                apiVersion: v1
                kind: Secret
                metadata:
                  name: "$secretName"
                  namespace: "$namespace"
                  annotations:
                    kubernetes.io/service-account.name: "$serviceAccount"
                type: kubernetes.io/service-account-token
                EOF
                kubectl create clusterrolebinding $serviceAccount --clusterrole cluster-admin --serviceaccount="$namespace:$serviceAccount"

                ca="$(kubectl -n "$namespace" get "secret/$secretName" -o jsonpath='{.data.ca\.crt}')"
                token="$(kubectl -n "$namespace" get "secret/$secretName" -o jsonpath='{.data.token}' | base64 -d)"

                echo "---
                apiVersion: v1
                kind: Config
                clusters:
                  - name: default
                    cluster:
                      certificate-authority-data: ${ca}
                      server: ${server}
                contexts:
                  - name: default
                    context:
                      cluster: default
                      namespace: default
                      user: ${serviceAccount}
                users:
                  - name: ${serviceAccount}
                    user:
                      token: ${token}
                current-context: default
                " > kubeconfig

                echo ">>> Publish kubeconfig"
                pubsub_message=$(jq -c --null-input "{\"cluster_name\": \"${CLUSTER_NAME}\", \"kyma_version\": \"${PULL_BASE_REF}\", \"kubeconfig\": \"$(cat kubeconfig)\"}")
                gcloud pubsub topics publish --project="sap-kyma-prow" "release-cluster-created" --message="${pubsub_message}"
