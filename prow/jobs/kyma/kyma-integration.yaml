---
test_infra_ref: &test_infra_ref
  org: kyma-project
  repo: test-infra
  path_alias: github.com/kyma-project/test-infra

kk_test_ref: &kk_test_ref
  org: kasiakepka
  repo: test-infra
  path_alias: github.com/kyma-project/test-infra

kyma_ref: &kyma_ref
  org: kyma-project
  repo: kyma
  path_alias: github.com/kyma-project/kyma

vm_job_template: &vm_job_template
  skip_report: false # from documentation: SkipReport skips commenting and setting status on GitHub.
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      command:
      - "/home/prow/go/src/github.com/kyma-project/test-infra/prow/scripts/provision-vm-and-start-kyma.sh"
      resources:
        requests:
          memory: 100Mi
          cpu: 50m

vm_job_labels_template: &vm_job_labels_template
  preset-kyma-guard-bot-github-token: "true"
  preset-sa-vm-kyma-integration: "true"
  preset-gc-project-env: "true"

gke_minio_gateway_job_template: &gke_minio_gateway_job_template
  optional: true
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-minio-gateway.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

gke_minio_gateway_migration_job_template: &gke_minio_gateway_migration_job_template
  optional: true
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-minio-gateway-migration.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

gke_job_template: &gke_job_template
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-integration.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

gke_upgrade_job_template: &gke_upgrade_job_template
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "/home/prow/go/src/github.com/kyma-project/test-infra/prow/scripts/cluster-integration/kyma-gke-upgrade.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

gke_central_job_template: &gke_central_job_template
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-central.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

gke_xip_job_template: &gke_xip_job_template
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  always_run: false
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-integration-xip.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m
          
gke_new_proj_job_template: &gke_new_proj_job_template
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  always_run: false
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-integration.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

gke_xip_upgrade_job_template: &gke_xip_upgrade_job_template
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "/home/prow/go/src/github.com/kyma-project/test-infra/prow/scripts/cluster-integration/kyma-gke-upgrade-xip.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

gke_xip_central_job_template: &gke_xip_central_job_template
  skip_report: false
  decorate: true
  path_alias: github.com/kyma-project/kyma
  max_concurrency: 10
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
      securityContext:
        privileged: true
      command:
      - "bash"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-central-xip.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

gke_backup_job_template: &gke_backup_job_template
  skip_report: false
  decorate: true
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190129-c951cf2
      securityContext:
        privileged: true
      command:
      - "bash"
      env:
      - name: INPUT_CLUSTER_NAME
        value: "e2etest"
      - name: REPO_OWNER_GIT
        value: "kyma-project"
      - name: REPO_NAME_GIT
        value: "kyma"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-end-to-end-test.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m


gke_job_labels_template: &gke_job_labels_template
  preset-kyma-guard-bot-github-token: "true"
  preset-sa-gke-kyma-integration: "true"
  preset-gc-compute-envs: "true"
  preset-gc-project-env: "true"
  preset-docker-push-repository-gke-integration: "true"
  preset-dind-enabled: "true"
  preset-kyma-artifacts-bucket: "true"

gke_backup_job_labels_template: &gke_backup_job_labels_template
  preset-weekly-github-integration: "true"
  preset-kyma-backup-restore-bucket: "true"
  preset-kyma-backup-credentials: "true"
  <<: *gke_job_labels_template

presubmits: # runs on PRs
  kyma-project/kyma:
  - name: pre-master-kyma-integration
    branches:
    - master
    <<: *vm_job_template
    # following regexp won't start build if only Markdown files were changed
    run_if_changed: "^((resources\\S+|installation\\S+)(\\.[^.][^.][^.]+$|\\.[^.][^dD]$|\\.[^mM][^.]$|\\.[^.]$|/[^.]+$))"
    labels:
      preset-build-pr: "true"
      <<: *vm_job_labels_template
    extra_refs:
    - <<: *test_infra_ref
      base_ref: master

  - name: pre-rel10-kyma-integration
    branches:
      - release-1.0
    always_run: false
    <<: *vm_job_template
    labels:
      <<: *vm_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.0

  - name: pre-rel11-kyma-integration
    branches:
      - release-1.1
    always_run: false
    <<: *vm_job_template
    labels:
      <<: *vm_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.1

  - name: pre-rel12-kyma-integration
    branches:
      - release-1.2
    always_run: false
    <<: *vm_job_template
    labels:
      <<: *vm_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.2

  - name: pre-master-kyma-gke-minio-gateway
    branches:
    - master
    <<: *gke_minio_gateway_job_template
    run_if_changed: "^(resources\\/assetstore|installation)"
    optional: false
    labels:
      preset-build-pr: "true"
      <<: *gke_job_labels_template
    extra_refs:
    - <<: *test_infra_ref
      base_ref: master

  - name: pre-master-kyma-gke-minio-gateway-migration
    branches:
      - master
    <<: *gke_minio_gateway_migration_job_template
    run_if_changed: "^(resources\\/assetstore|installation)"
    optional: true # change to false after verification
    labels:
      preset-build-pr: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: master

  - name: pre-rel12-kyma-gke-minio-gateway
    branches:
    - release-1.2
    always_run: false
    <<: *gke_minio_gateway_job_template
    optional: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.2

  - name: pre-master-kyma-gke-integration
    branches:
    - master
    <<: *gke_job_template
    # following regexp won't start build if only Markdown files were changed
    run_if_changed: "^((resources\\S+|installation\\S+)(\\.[^.][^.][^.]+$|\\.[^.][^dD]$|\\.[^mM][^.]$|\\.[^.]$|/[^.]+$))"
    labels:
      preset-build-pr: "true"
      <<: *gke_job_labels_template
    extra_refs:
    - <<: *test_infra_ref
      base_ref: master

  - name: pre-rel10-kyma-gke-integration
    branches:
      - release-1.0
    <<: *gke_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - org: kyma-project
        repo: test-infra
        path_alias: github.com/kyma-project/test-infra
        base_ref: release-1.0

  - name: pre-rel11-kyma-gke-integration
    branches:
      - release-1.1
    <<: *gke_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - org: kyma-project
        repo: test-infra
        path_alias: github.com/kyma-project/test-infra
        base_ref: release-1.1

  - name: pre-rel12-kyma-gke-integration
    branches:
      - release-1.2
    <<: *gke_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - org: kyma-project
        repo: test-infra
        path_alias: github.com/kyma-project/test-infra
        base_ref: release-1.2

  - name: pre-master-kyma-gke-upgrade
    branches:
    - master
    <<: *gke_upgrade_job_template
    # following regexp won't start build if only Markdown files were changed
    run_if_changed: "^((resources\\S+|installation\\S+|tests/end-to-end/upgrade/chart/upgrade/\\S+)(\\.[^.][^.][^.]+$|\\.[^.][^dD]$|\\.[^mM][^.]$|\\.[^.]$|/[^.]+$))"
    labels:
      preset-build-pr: "true"
      <<: *gke_job_labels_template
    extra_refs:
    - <<: *test_infra_ref
      base_ref: master

    # Already defined to ensure that pipeline is defined for the new upgrade job
  - name: pre-rel10-kyma-gke-upgrade
    branches:
      - release-1.0
    <<: *gke_upgrade_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.0
  - name: pre-rel11-kyma-gke-upgrade
    branches:
      - release-1.1
    <<: *gke_upgrade_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.1
  - name: pre-rel12-kyma-gke-upgrade
    branches:
      - release-1.2
    <<: *gke_upgrade_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.2

  - name: pre-master-kyma-gke-central-connector
    branches:
    - master
    <<: *gke_central_job_template
    # following regexp won't start build if only Markdown files were changed
    run_if_changed: "^((resources/application-connector\\S+|installation\\S+)(\\.[^.][^.][^.]+$|\\.[^.][^dD]$|\\.[^mM][^.]$|\\.[^.]$|/[^.]+$))"
    labels:
      preset-build-pr: "true"
      <<: *gke_job_labels_template
    extra_refs:
    - <<: *test_infra_ref
      base_ref: master

  - name: pre-rel10-kyma-gke-central-connector
    branches:
      - release-1.0
    <<: *gke_central_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.0

  - name: pre-rel11-kyma-gke-central-connector
    branches:
      - release-1.1
    <<: *gke_central_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.1

  - name: pre-rel12-kyma-gke-central-connector
    branches:
      - release-1.2
    <<: *gke_central_job_template
    always_run: false
    labels:
      preset-build-release: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: release-1.2

  - name: pre-master-kyma-xip-integration
    branches:
       - master
    <<: *gke_xip_job_template
    labels:
      preset-build-pr: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *kk_test_ref
        base_ref: xip-integration
  
  - name: pre-master-kyma-integration-new-project
    branches:
       - master
    <<: *gke_new_proj_job_template
    labels:
      preset-build-pr: "true"
      preset-kyma-guard-bot-github-token: "true"
      preset-sa-gke-kyma-workloads: "true"
      preset-docker-push-repository-gke-integration: "true"
      preset-dind-enabled: "true"
      preset-kyma-artifacts-bucket: "true"
    extra_refs:
      - <<: *test_infra_ref
        base_ref: master

  - name: pre-master-kyma-xip-gke-upgrade
    branches:
    - master
    <<: *gke_xip_upgrade_job_template
    labels:
      preset-build-pr: "true"
      <<: *gke_job_labels_template
    extra_refs:
    - <<: *kk_test_ref
      base_ref: xip-integration

  - name: pre-master-kyma-xip-gke-central-connector
    branches:
    - master
    <<: *gke_xip_central_job_template
    labels:
      preset-build-pr: "true"
      <<: *gke_job_labels_template
    extra_refs:
    - <<: *kk_test_ref
      base_ref: xip-integration

  - name: pre-master-kyma-backup-test
    optional: true
    branches:
    - master
    <<: *gke_backup_job_template
    # following regexp won't start build if only Markdown files were changed
    run_if_changed: "^((tests/end-to-end/backup-restore-test/deploy/chart/backup-test/\\S+)(\\.[^.][^.][^.]+$|\\.[^.][^dD]$|\\.[^mM][^.]$|\\.[^.]$|/[^.]+$))"
    labels:
      preset-build-pr: "true"
      <<: *gke_backup_job_labels_template
    extra_refs:
    - <<: *test_infra_ref
      base_ref: master

postsubmits:
  kyma-project/kyma:
  - name: post-master-kyma-integration
    <<: *vm_job_template
    branches:
    - master
    labels:
      preset-build-master: "true"
      <<: *vm_job_labels_template
    extra_refs:
    - <<: *test_infra_ref
      base_ref: master

  - name: post-master-kyma-gke-integration
    <<: *gke_job_template
    branches:
    - master
    labels:
      preset-build-master: "true"
      <<: *gke_job_labels_template
    extra_refs:
    - <<: *test_infra_ref
      base_ref: master

  - name: post-master-kyma-gke-central-connector
    <<: *gke_central_job_template
    branches:
      - master
    labels:
      preset-build-master: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: master

  - name: post-master-kyma-gke-upgrade
    <<: *gke_upgrade_job_template
    branches:
      - master
    labels:
      preset-build-master: "true"
      <<: *gke_job_labels_template
    extra_refs:
      - <<: *test_infra_ref
        base_ref: master

periodics:
# kyma-integration-cleaner removes all sshPublic keys stored for service account "sa-vm-kyma-integration". Those keys refers to machines that in most cases were already removed.
# Purpose of this job is to avoid error: "Login profile size exceeds 32 KiB" when running kyma-integration tests
- name: utilities-kyma-integration-cleaner
  cron: "30 * * * *" # "At 30 minutes past every hour"
  labels:
    preset-sa-vm-kyma-integration: "true"
    preset-gc-project-env: "true"
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/prow/cleaner:0.0.1 # see test-infra/prow/images/cleaner
      resources:
        requests:
          memory: 100Mi
          cpu: 50m
- name: orphaned-assetstore-gcp-bucket-cleaner
  cron: "00 00 * * *" # "At 00:00 each day"
  labels:
    preset-sa-gke-kyma-integration: "true"
    preset-gc-project-env: "true"
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/prow/buildpack-golang:0.0.1
      command:
      - "bash"
      args:
      - "-c"
      - "development/assetstore-gcp-bucket-cleaner.sh -project=${CLOUDSDK_CORE_PROJECT}"
      resources:
        requests:
          memory: 1Gi
          cpu: 400m
- name: orphaned-disks-cleaner
  cron: "30 * * * *" # "At 30 minutes past every hour"
  labels:
    preset-sa-gke-kyma-integration: "true"
    preset-gc-project-env: "true"
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/prow/buildpack-golang:0.0.1
      command:
      - "bash"
      args:
      - "-c"
      - "development/disks-cleanup.sh -project=${CLOUDSDK_CORE_PROJECT} -dryRun=false -diskNameRegex='^gke-gkeint|gke-upgrade|weekly|nightly|gke-central|gke-minio'"
      resources:
        requests:
          memory: 1Gi
          cpu: 400m
- name: orphaned-clusters-cleaner
  cron: "0 * * * *" # "At 0 minute every hour"
  labels:
    preset-sa-gke-kyma-integration: "true"
    preset-gc-project-env: "true"
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/prow/buildpack-golang:0.0.1
      command:
      - "bash"
      args:
      - "-c"
      - "development/clusters-cleanup.sh -project=${CLOUDSDK_CORE_PROJECT} -dryRun=false -whitelisted-clusters=kyma-prow,workload-kyma-prow,nightly,weekly,service-catalog-crd-periodic"
      resources:
        requests:
          memory: 1Gi
          cpu: 400m
- name: orphaned-vms-cleaner
  cron: "0 * * * *" # "At minute 0 past every hour"
  labels:
    preset-sa-gke-kyma-integration: "true"
    preset-gc-project-env: "true"
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/prow/test-infra/buildpack-golang:v20181119-afd3fbd
      command:
      - "bash"
      args:
      - "-c"
      - "development/vms-cleanup.sh -project=${CLOUDSDK_CORE_PROJECT} -dryRun=false"
      resources:
        requests:
          memory: 1Gi
          cpu: 400m
- name: orphaned-loadbalancer-cleaner
  cron: "15 * * * *" # "At 15 past every hour"
  labels:
    preset-sa-gke-kyma-integration: "true"
    preset-gc-project-env: "true"
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/prow/buildpack-golang:0.0.1
      command:
      - "bash"
      args:
      - "-c"
      - "development/loadbalancer-cleanup.sh -project=${CLOUDSDK_CORE_PROJECT} -dryRun=false"
      resources:
        requests:
          memory: 1Gi
          cpu: 400m
- name: firewall-cleaner
  cron: "45 */4 * * 1-5" # "At minute 45 past every 4th hour from Monday through Friday"
  labels:
    preset-sa-gke-kyma-integration: "true"
    preset-gc-project-env: "true"
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/prow/test-infra/buildpack-golang:v20181119-afd3fbd
      command:
      - "bash"
      args:
      - "-c"
      - "development/firewall-cleanup.sh -project=${CLOUDSDK_CORE_PROJECT} -dryRun=false"
      resources:
        requests:
          memory: 1Gi
          cpu: 400m
- name: orphaned-dns-cleaner
  cron: "30 * * * *" # "At minute 30 past every hour"
  labels:
    preset-sa-gke-kyma-integration: "true"
    preset-gc-project-env: "true"
    preset-gc-compute-envs: "true"
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  spec:
    containers:
    - image: eu.gcr.io/kyma-project/prow/test-infra/buildpack-golang:v20181119-afd3fbd
      command:
      - "bash"
      args:
      - "-c"
      - "development/dns-cleanup.sh -project=${CLOUDSDK_CORE_PROJECT} -dnsZone=${CLOUDSDK_DNS_ZONE_NAME} -ageInHours=2 -regions=${CLOUDSDK_COMPUTE_REGION} -dryRun=false"
      resources:
        requests:
          memory: 1Gi
          cpu: 400m

- name: kyma-gke-nightly
  cron: "0 4 * * 1-5" # "At 04:00 on every day-of-week from Monday through Friday"
  labels:
    preset-kyma-keyring: "true"
    preset-kyma-encryption-key: "true"
    preset-build-master: "true"
    preset-stability-checker-slack-notifications: "true"
    preset-nightly-github-integration: "true"
    <<: *gke_job_labels_template
  decorate: true
  extra_refs:
  - org: kyma-project
    repo: test-infra
    base_ref: master
    path_alias: github.com/kyma-project/test-infra
  - <<: *kyma_ref
    base_ref: master
  spec:
    volumes:
    - name: sa-stability-fluentd-storage-writer
      secret:
        secretName: sa-stability-fluentd-storage-writer
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190129-c951cf2
      securityContext:
        privileged: true
      volumeMounts:
      - name: sa-stability-fluentd-storage-writer
        mountPath: /etc/credentials/sa-stability-fluentd-storage-writer
        readOnly: true
      command:
      - "bash"
      env:
      - name: INPUT_CLUSTER_NAME
        value: "nightly"
      - name: TEST_RESULT_WINDOW_TIME
        value: "6h"
      - name: STABILITY_SLACK_CLIENT_CHANNEL_ID
        value: "#c4core-kyma-ci-force"
      - name: GITHUB_TEAMS_WITH_KYMA_ADMINS_RIGHTS
        value: "cluster-access"
      - name: KYMA_ALERTS_SLACK_API_URL
        valueFrom:
          secretKeyRef:
            name: kyma-alerts-slack-api-url
            key: secret
      - name: KYMA_ALERTS_CHANNEL
        value: "#c4core-kyma-ci-force"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-long-lasting.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m

- name: kyma-gke-weekly
  cron: "0 6 * * 1" # "At 06:00 on Monday."
  labels:
    preset-kyma-keyring: "true"
    preset-kyma-encryption-key: "true"
    preset-build-master: "true"
    preset-stability-checker-slack-notifications: "true"
    preset-weekly-github-integration: "true"
    <<: *gke_job_labels_template
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  - <<: *kyma_ref
    base_ref: master
  spec:
    volumes:
      - name: sa-stability-fluentd-storage-writer
        secret:
          secretName: sa-stability-fluentd-storage-writer
    containers:
      - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190129-c951cf2
        securityContext:
          privileged: true
        volumeMounts:
          - name: sa-stability-fluentd-storage-writer
            mountPath: /etc/credentials/sa-stability-fluentd-storage-writer
            readOnly: true
        command:
          - "bash"
        env:
          - name: INPUT_CLUSTER_NAME
            value: "weekly"
          - name: TEST_RESULT_WINDOW_TIME
            value: "24h"
          - name: STABILITY_SLACK_CLIENT_CHANNEL_ID
            value: "#c4core-kyma-ci-force"
          - name: GITHUB_TEAMS_WITH_KYMA_ADMINS_RIGHTS
            value: "cluster-access"
          - name: KYMA_ALERTS_SLACK_API_URL
            valueFrom:
              secretKeyRef:
                name: kyma-alerts-slack-api-url
                key: secret
          - name: KYMA_ALERTS_CHANNEL
            value: "#c4core-kyma-ci-force"
        args:
          - "-c"
          - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-long-lasting.sh"
        resources:
          requests:
            memory: 200Mi
            cpu: 80m

- name: kyma-aks-nightly
  cron: "0 4 * * 1-5" # "At 04:00 on every day-of-week from Monday through Friday"
  labels:
    preset-kyma-keyring: "true"
    preset-kyma-encryption-key: "true"
    preset-build-master: "true"
    preset-stability-checker-slack-notifications: "true"
    preset-nightly-aks-github-integration: "true"
    preset-creds-aks-kyma-integration: "true"
    <<: *gke_job_labels_template
  decorate: true
  extra_refs:
  - <<: *test_infra_ref
    base_ref: master
  - <<: *kyma_ref
    base_ref: master
  spec:
    volumes:
      - name: sa-stability-fluentd-storage-writer
        secret:
          secretName: sa-stability-fluentd-storage-writer
    containers:
      - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190528-8897828
        securityContext:
          privileged: true
        volumeMounts:
          - name: sa-stability-fluentd-storage-writer
            mountPath: /etc/credentials/sa-stability-fluentd-storage-writer
            readOnly: true
        env:
          - name: RS_GROUP
            value: "kyma-nightly-aks"
          - name: REGION
            value: "northeurope"
          - name: INPUT_CLUSTER_NAME
            value: "nightly-aks"
          - name: TEST_RESULT_WINDOW_TIME
            value: "6h"
          - name: STABILITY_SLACK_CLIENT_CHANNEL_ID
            value: "#c4core-kyma-ci-force"
          - name: GITHUB_TEAMS_WITH_KYMA_ADMINS_RIGHTS
            value: "cluster-access"
          - name: KYMA_ALERTS_SLACK_API_URL
            valueFrom:
              secretKeyRef:
                name: kyma-alerts-slack-api-url
                key: secret
          - name: KYMA_ALERTS_CHANNEL
            value: "#c4core-kyma-ci-force"
        command:
          - "bash"
        args:
          - "-c"
          - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-aks-long-lasting.sh"
        resources:
          requests:
            memory: 200Mi
            cpu: 80m

- name: kyma-gke-end-to-end-test-backup-restore
  cron: "0 5 * * 1-5" # "At 05:00 on every day-of-week from Monday through Friday."
  <<: *gke_backup_job_template
  labels:
    preset-build-master: "true"
    <<: *gke_backup_job_labels_template
  extra_refs:
    - org: kyma-project
      repo: test-infra
      base_ref: master
      path_alias: github.com/kyma-project/test-infra
    - <<: *kyma_ref
      base_ref: master

- name: kyma-load-tests-weekly
  cron: "0 2 * * 1" # "At 2:00 on every Monday."
  labels:
    preset-build-master: "true"
    preset-sap-slack-bot-token: "true"
    <<: *gke_job_labels_template
  decorate: true
  extra_refs:
    - org: kyma-project
      repo: test-infra
      base_ref: master
      path_alias: github.com/kyma-project/test-infra
    - <<: *kyma_ref
      base_ref: master
  spec:
    containers:
      - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190129-c951cf2
        securityContext:
          privileged: true
        command:
          - "bash"
        env:
          - name: INPUT_CLUSTER_NAME
            value: "load-test"
          - name: LOAD_TEST_SLACK_CLIENT_CHANNEL_ID
            value: "#c4-xf-load-test"
          - name: LT_TIMEOUT # Load test timeout in minutes
            value: "30"
          - name: LT_REQS_PER_ROUTINE # Number of requests to function per go routine
            value: "1600"
        args:
          - "-c"
          - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-load-test.sh"
        resources:
          requests:
            memory: 200Mi
            cpu: 80m

- name: kyma-components-use-recent-versions
  decorate: true
  cron: "0 4 * * 1" # At 04:00 on every Monday
  labels:
    preset-sap-slack-bot-token: "true"
  extra_refs:
    - <<: *test_infra_ref
      base_ref: master
    - <<: *kyma_ref
      base_ref: master
  spec:
    containers:
      - image: eu.gcr.io/kyma-project/prow/test-infra/buildpack-golang:v20181204-a6e79be
        command:
        - "bash"
        args:
        - "-c"
        - "${KYMA_PROJECT_DIR}/test-infra/development/tools/scripts/synchronizer-entrypoint.sh ${KYMA_PROJECT_DIR}/test-infra/development"
        env:
          - name: KYMA_PROJECT_DIR
            value: "/home/prow/go/src/github.com/kyma-project"
          #TODO: change to "#c4core-kyma-ci-force" when the component naming convention will be agreed and synchronizer will follow it
          - name: STABILITY_SLACK_CLIENT_CHANNEL_ID
            value: "#test-alert-channel"
          - name: OUT_OF_DATE_DAYS
            value: "3"
        resources:
          requests:
            memory: 1Gi
            cpu: 400m

- name: kyma-gke-service-catalog-crd-periodic
  cron: "0 5 * * 2,5" # "At 05:00 on Tuesday and Friday
  labels:
    preset-kyma-keyring: "true"
    preset-kyma-encryption-key: "true"
    preset-build-master: "true"
    preset-stability-checker-slack-notifications: "true"
    preset-service-catalog-crd-periodic-github-integration: "true"
    <<: *gke_job_labels_template
  decorate: true
  extra_refs:
    - <<: *test_infra_ref
      base_ref: master
    - <<: *kyma_ref
      base_ref: master
  spec:
    volumes:
    - name: sa-stability-fluentd-storage-writer
      secret:
        secretName: sa-stability-fluentd-storage-writer
    containers:
    - image: eu.gcr.io/kyma-project/test-infra/kyma-cluster-infra:v20190129-c951cf2
      securityContext:
        privileged: true
      volumeMounts:
      - name: sa-stability-fluentd-storage-writer
        mountPath: /etc/credentials/sa-stability-fluentd-storage-writer
        readOnly: true
      env:
      - name: INPUT_CLUSTER_NAME
        value: "service-catalog-crd-periodic"
      - name: TEST_RESULT_WINDOW_TIME
        value: "24h"
      - name: STABILITY_SLACK_CLIENT_CHANNEL_ID
        value: "#c4core-kyma-gopher-pr"
      - name: GITHUB_TEAMS_WITH_KYMA_ADMINS_RIGHTS
        value: "cluster-access"
      - name: SERVICE_CATALOG_CRD
        value: "true"
      - name: KYMA_ALERTS_SLACK_API_URL
        valueFrom:
          secretKeyRef:
            name: kyma-alerts-slack-api-url
            key: secret
      - name: KYMA_ALERTS_CHANNEL
        value: "#c4core-kyma-gopher-pr"
      command:
      - "bash"
      args:
      - "-c"
      - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-long-lasting.sh"
      resources:
        requests:
          memory: 200Mi
          cpu: 80m
