periodics:
  - name: kyma-upgrade-k3d-kyma2-to-main
    annotations:
      description: "K3d Kyma 2.0 to main branch."
      owner: "jellyfish"
      pipeline.clusterprovisioning: "kyma cli"
      pipeline.installer: "kyma deploy"
      pipeline.platform: "k3d"
      pipeline.test: "upgrade-fast-integration"
      pipeline.trigger: "periodic"
      pipeline.type: "integration"
      testgrid-dashboards: "kyma_integration"
    labels:
      prow.k8s.io/pubsub.project: "sap-kyma-prow"
      prow.k8s.io/pubsub.runID: "kyma-upgrade-k3d-kyma2-to-main"
      prow.k8s.io/pubsub.topic: "prowjobs"
      preset-kyma-guard-bot-github-token: "true"
      preset-kind-volume-mounts: "true"
      preset-dind-enabled: "true"
    cron: "0 0 6-18/2 ? * 1-5"
    skip_report: false
    decorate: true
    decoration_config:
      grace_period: 600000000000
      timeout: 7200000000000
    path_alias: github.com/kyma-project/kyma
    cluster: trusted-workload
    extra_refs:
      - org: kyma-project
        repo: kyma
        path_alias: github.com/kyma-project/kyma
        base_ref: main
      - org: kyma-incubator
        repo: local-kyma
        path_alias: github.com/kyma-incubator/local-kyma
        base_ref: main
      - org: kyma-project
        repo: test-infra
        path_alias: github.com/kyma-project/test-infra
        base_ref: main
    reporter_config:
      slack:
        channel: jellyfish-notifications
    spec:
      containers:
        - image: europe-docker.pkg.dev/kyma-project/prod/testimages/e2e-dind-nodejs:latest
          command: [ "/init.sh" ]
          securityContext:
            privileged: true
            seccompProfile:
              type: Unconfined
            allowPrivilegeEscalation: true
          args:
            - "bash"
            - "-c"
            - |
              set -e
              mkdir -p "/tmp/bin"
              export PATH="/tmp/bin:${PATH}"
              pushd "/tmp/bin" || exit
              curl -sSLo kyma "https://storage.googleapis.com/kyma-cli-unstable/kyma-linux?alt=media"
              chmod +x kyma
              kyma_version=$(kyma version --client)
              popd || exit
              kyma provision k3d --ci
              cd ./kyma
              kyma_get_last_release_version_return_version=$(curl --silent --fail --show-error -H "Authorization: token "${BOT_GITHUB_TOKEN}" "https://api.github.com/repos/kyma-project/kyma/releases" | jq -r 'del( .[] | select( (.prerelease == true) or (.draft == true) )) | sort_by(.tag_name | split(".") | map(tonumber)) | .[-1].tag_name')
              export KYMA_SOURCE="${kyma_get_last_release_version_return_version:?}"
              echo $KYMA_SOURCE
              kyma deploy --ci --source "${KYMA_SOURCE}" --timeout 60m
              git reset --hard
              if [[ ${KYMA_SOURCE} == "main" ]]
              then
                git checkout "${KYMA_SOURCE}"
              else
                git checkout tags/"${KYMA_SOURCE}"
              fi
              make -C "./tests/fast-integration" "ci-pre-upgrade"
              pushd "/tmp/bin" || exit
              curl -Lo kyma.tar.gz "https://github.com/kyma-project/cli/releases/latest/download/kyma_linux_x86_64.tar.gz" && tar -zxvf kyma.tar.gz && chmod +x kyma && rm -f kyma.tar.gz
              kyma_version=$(kyma version --client)
              popd || exit
              kyma deploy --ci --source "main" --timeout 20m
              make -C "./tests/fast-integration" "ci-post-upgrade"
              sleep 60
              make -C "./tests/fast-integration" "ci-pre-upgrade"
          env:
            - name: KYMA_PROJECT_DIR
              value: "."
          resources:
            requests:
              memory: 100Mi
              cpu: 50m
            limits:
              memory: 200Mi
              cpu: 100m
      tolerations:
        - key: dedicated
          operator: Equal
          value: high-cpu
          effect: NoSchedule
      nodeSelector:
        dedicated: "high-cpu"