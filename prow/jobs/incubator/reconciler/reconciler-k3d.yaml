presubmits:
  kyma-incubator/reconciler:   
    - name: pull-main-cli-integration-k3d
      annotations:
        owner: "jellyfish"
        description: "int test reconciler"
        pipeline.platform: "k3d"
        pipeline.trigger: "pr-submit"
      labels:
        prow.k8s.io/pubsub.project: "sap-kyma-prow"
        prow.k8s.io/pubsub.runID: "pull-main-cli-integration-k3d"
        prow.k8s.io/pubsub.topic: "prowjobs"
        preset-kind-volume-mounts: "true"
        preset-dind-enabled: "true"
      run_if_changed: '^((cmd\S+|configs\S+|internal\S+|pkg\S+)(\.[^.][^.][^.]+$|\.[^.][^dD]$|\.[^mM][^.]$|\.[^.]$|/[^.]+$))'
      skip_report: false
      decorate: true
      cluster: untrusted-workload
      branches:
        - ^main$
      extra_refs:
        - org: kyma-project
          repo: kyma
          path_alias: github.com/kyma-project/kyma
          base_ref: main
      spec:
        containers:
          - image: europe-docker.pkg.dev/kyma-project/prod/testimages/e2e-dind-k3d:v20230612-dadc01a7
            command: ["/init.sh"]
            securityContext:
              privileged: true
              seccompProfile:
                type: Unconfined
              allowPrivilegeEscalation: true
            args:
              - "bash"
              - "-c"
              - |
                set -e
                apk add nodejs npm
                install_dir="/usr/local/bin"
                mkdir -p "$install_dir"
                kyma_cli_url="https://storage.googleapis.com/kyma-cli-pr/kyma-linux-pr-${PULL_NUMBER}"
                pushd "$install_dir" || exit
                curl -Lo kyma "${kyma_cli_url}"
                chmod +x kyma
                popd || exit
                kyma version --client
                kyma provision k3d --ci
                kyma deploy --ci --concurrency=8 --profile=evaluation --source=main
                pushd "../kyma/tests/fast-integration"
                make ci
                popd
            resources:
              requests:
                cpu: 1
                memory: 2Gi
              limits:
                cpu: 2
                memory: 4Gi
    - name: pull-main-cli-integration-k3d-latest
      annotations:
        owner: "jellyfish"
        description: "int test reconciler"
        pipeline.platform: "k3d"
        pipeline.trigger: "pr-submit"
      labels:
        prow.k8s.io/pubsub.project: "sap-kyma-prow"
        prow.k8s.io/pubsub.runID: "pull-main-cli-integration-k3d-latest"
        prow.k8s.io/pubsub.topic: "prowjobs"
        preset-kind-volume-mounts: "true"
        preset-dind-enabled: "true"
        preset-kyma-guard-bot-github-token: "true"
      run_if_changed: '^((cmd\S+|configs\S+|internal\S+|pkg\S+)(\.[^.][^.][^.]+$|\.[^.][^dD]$|\.[^mM][^.]$|\.[^.]$|/[^.]+$))'
      skip_report: false
      decorate: true
      cluster: untrusted-workload
      max_concurrency: 10
      branches:
        - ^main$
      extra_refs:
        - org: kyma-project
          repo: kyma
          path_alias: github.com/kyma-project/kyma
          base_ref: main
      spec:
        containers:
          - image: europe-docker.pkg.dev/kyma-project/prod/testimages/e2e-dind-k3d:v20230612-dadc01a7
            command: ["/init.sh"]
            securityContext:
              privileged: true
              seccompProfile:
                type: Unconfined
              allowPrivilegeEscalation: true
            args:
              - "bash"
              - "-c"
              - |
                set -e
                apk add nodejs npm
                kyma_get_last_release_version_return_version=$(curl --silent --fail --show-error -H "Authorization: token ${BOT_GITHUB_TOKEN}" "https://api.github.com/repos/kyma-project/kyma/releases" | jq -r 'del( .[] | select( (.prerelease == true) or (.draft == true) )) | sort_by(.tag_name | split(".") | map(tonumber)) | .[-1].target_commitish | split("/") | .[-1]')
                export KYMA_SOURCE="${kyma_get_last_release_version_return_version:?}"
                install_dir="/usr/local/bin"
                mkdir -p "$install_dir"
                kyma_cli_url="https://storage.googleapis.com/kyma-cli-pr/kyma-linux-pr-${PULL_NUMBER}"
                pushd "$install_dir" || exit
                curl -Lo kyma "${kyma_cli_url}"
                chmod +x kyma
                popd || exit
                kyma version --client
                kyma provision k3d --ci
                kyma deploy --ci --concurrency=8 --profile=evaluation --source="${KYMA_SOURCE}"
                pushd "../kyma/tests/fast-integration"
                git remote add origin https://github.com/kyma-project/kyma.git
                git reset --hard && git remote update && git fetch --all >/dev/null 2>&1 && git checkout "${KYMA_SOURCE}"
                make ci
                popd
            resources:
              requests:
                cpu: 1
                memory: 2Gi
              limits:
                cpu: 2
                memory: 4Gi
    - name: pull-main-cli-kyma-release-upgrade-k3d
      annotations:
        owner: "jellyfish"
        description: "upgrade test reconciler"
        pipeline.platform: "k3d"
        pipeline.trigger: "pr-submit"
      labels:
        prow.k8s.io/pubsub.project: "sap-kyma-prow"
        prow.k8s.io/pubsub.runID: "pull-main-cli-kyma-release-upgrade-k3d"
        prow.k8s.io/pubsub.topic: "prowjobs"
        preset-kind-volume-mounts: "true"
        preset-dind-enabled: "true"
        preset-kyma-guard-bot-github-token: "true"
      run_if_changed: '^((cmd\S+|configs\S+|internal\S+|pkg\S+)(\.[^.][^.][^.]+$|\.[^.][^dD]$|\.[^mM][^.]$|\.[^.]$|/[^.]+$))'
      skip_report: false
      decorate: true
      cluster: untrusted-workload
      max_concurrency: 10
      branches:
        - ^main$
      extra_refs:
        - org: kyma-project
          repo: kyma
          path_alias: github.com/kyma-project/kyma
          base_ref: main
      spec:
        containers:
          - image: europe-docker.pkg.dev/kyma-project/prod/testimages/e2e-dind-k3d:v20230612-dadc01a7
            command: ["/init.sh"]
            securityContext:
              privileged: true
              seccompProfile:
                type: Unconfined
              allowPrivilegeEscalation: true
            args:
              - "bash"
              - "-c"
              - |
                set -e
                apk add nodejs npm
                kyma_get_previous_release_version_return_version=$(curl --silent --fail --show-error -H "Authorization: token ${BOT_GITHUB_TOKEN}" "https://api.github.com/repos/kyma-project/kyma/releases" | jq -r 'del( .[] | select( (.prerelease == true) or (.draft == true) )) | sort_by(.tag_name | split(".") | map(tonumber)) | .[-2].target_commitish | split("/") | .[-1]')
                export KYMA_SOURCE="${kyma_get_previous_release_version_return_version:?}"
                kyma_get_last_release_version_return_version=$(curl --silent --fail --show-error -H "Authorization: token ${BOT_GITHUB_TOKEN}" "https://api.github.com/repos/kyma-project/kyma/releases" | jq -r 'del( .[] | select( (.prerelease == true) or (.draft == true) )) | sort_by(.tag_name | split(".") | map(tonumber)) | .[-1].target_commitish | split("/") | .[-1]')
                export KYMA_UPGRADE_VERSION="${kyma_get_last_release_version_return_version:?}"
                install_dir="/usr/local/bin"
                mkdir -p "$install_dir"
                kyma_cli_url="https://storage.googleapis.com/kyma-cli-pr/kyma-linux-pr-${PULL_NUMBER}"
                pushd "$install_dir" || exit
                curl -Lo kyma "${kyma_cli_url}"
                chmod +x kyma
                popd || exit
                kyma version --client
                kyma provision k3d --ci
                kyma deploy --ci --concurrency=8 --profile=evaluation --source="${KYMA_SOURCE}" --verbose
                pushd "../kyma/tests/fast-integration"
                git remote add origin https://github.com/kyma-project/kyma.git
                git reset --hard && git remote update && git fetch --all >/dev/null 2>&1 && git checkout "${KYMA_SOURCE}"
                make ci-pre-upgrade
                popd
                kyma deploy --ci --concurrency=8 --profile=evaluation --source="${KYMA_UPGRADE_VERSION}" --verbose
                pushd "../kyma-project/kyma/tests/fast-integration"
                git reset --hard && git remote update && git fetch --all >/dev/null 2>&1 && git checkout "${KYMA_UPGRADE_VERSION}"
                make ci-post-upgrade
                popd
            resources:
              requests:
                cpu: 1
                memory: 2Gi
              limits:
                cpu: 2
                memory: 4Gi
    - name: pull-main-reconciler-integration-k3d
      annotations:
        description: "int test reconciler"
        owner: "jellyfish"
        pipeline.platform: "k3d"
        pipeline.trigger: "pr-submit"
      labels:
        prow.k8s.io/pubsub.project: "sap-kyma-prow"
        prow.k8s.io/pubsub.runID: "pull-main-reconciler-integration-k3d"
        prow.k8s.io/pubsub.topic: "prowjobs"
        preset-kind-volume-mounts: "true"
        preset-dind-enabled: "true"
      run_if_changed: '^(go.mod$|go.sum$)|((cmd\S+|configs\S+|internal\S+|pkg\S+)(\.[^.][^.][^.]+$|\.[^.][^dD]$|\.[^mM][^.]$|\.[^.]$|/[^.]+$))'
      skip_report: false
      decorate: true
      cluster: untrusted-workload
      max_concurrency: 10
      branches:
        - ^main$
      spec:
        containers:
          - image: europe-docker.pkg.dev/kyma-project/prod/testimages/e2e-dind-k3d:v20230612-dadc01a7
            command: [ "/init.sh" ]
            securityContext:
              privileged: true
              seccompProfile:
                type: Unconfined
              allowPrivilegeEscalation: true
            args:
              - "bash"
              - "-c"
              - |
                set -e
                apk add nodejs npm postgresql13-client
                INSTALL_DIR="/usr/local/bin"
                mkdir -p $INSTALL_DIR
                export PATH=$PATH:$INSTALL_DIR
                pushd $INSTALL_DIR || exit
                curl -Lo kyma "https://storage.googleapis.com/kyma-cli-unstable/kyma-linux"
                chmod +x kyma
                popd
                kyma version --client
                wget https://github.com/golang-migrate/migrate/releases/download/v4.15.1/migrate.linux-amd64.tar.gz -O - | tar -zxO migrate > /tmp/migrate && chmod +x /tmp/migrate && mv /tmp/migrate /usr/local/bin/migrate
                ./scripts/postgres.sh start
                kyma provision k3d --ci
                make test-all
            resources:
              requests:
                cpu: 2
                memory: 3Gi
              limits:
                cpu: 4
                memory: 6Gi