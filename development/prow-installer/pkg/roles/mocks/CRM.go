// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	cloudresourcemanager "google.golang.org/api/cloudresourcemanager/v1"
)

// CRM is an autogenerated mock type for the CRM type
type CRM struct {
	mock.Mock
}

// GetPolicy provides a mock function with given fields: projectname, getiampolicyrequest
func (_m *CRM) GetPolicy(projectname string, getiampolicyrequest *cloudresourcemanager.GetIamPolicyRequest) (*cloudresourcemanager.Policy, error) {
	ret := _m.Called(projectname, getiampolicyrequest)

	var r0 *cloudresourcemanager.Policy
	if rf, ok := ret.Get(0).(func(string, *cloudresourcemanager.GetIamPolicyRequest) *cloudresourcemanager.Policy); ok {
		r0 = rf(projectname, getiampolicyrequest)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*cloudresourcemanager.Policy)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *cloudresourcemanager.GetIamPolicyRequest) error); ok {
		r1 = rf(projectname, getiampolicyrequest)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetPolicy provides a mock function with given fields: projectname, seriampolicyrequest
func (_m *CRM) SetPolicy(projectname string, seriampolicyrequest *cloudresourcemanager.SetIamPolicyRequest) (*cloudresourcemanager.Policy, error) {
	ret := _m.Called(projectname, seriampolicyrequest)

	var r0 *cloudresourcemanager.Policy
	if rf, ok := ret.Get(0).(func(string, *cloudresourcemanager.SetIamPolicyRequest) *cloudresourcemanager.Policy); ok {
		r0 = rf(projectname, seriampolicyrequest)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*cloudresourcemanager.Policy)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *cloudresourcemanager.SetIamPolicyRequest) error); ok {
		r1 = rf(projectname, seriampolicyrequest)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
