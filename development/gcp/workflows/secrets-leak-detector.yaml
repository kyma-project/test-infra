main:
  params: [ event ]
  steps:
    - check:
        call: json.decode
        args:
          data: $${event.data.message.data}
        result: step_result
    - check_if_prowjob_finished:
        switch:
          - condition: $${step_result.status in ["success", "failure", "aborted"]}
            steps:
              - search_secrets_leaks_in_logs:
                  call: http.post
                  args:
                    url: ${scan-logs-for-secrets-url}
                    auth:
                      type: OIDC
                    headers:
                      Content-Type: "application/cloudevents+json"
                    body: $${event}
                  result: step_result
              - check_if_leaks_found:
                  switch:
                    - condition: $${step_result.body.type == "prowjob.logs.leaks.found"}
                      steps:
                        - move_gcs_bucket:
                            call: http.post
                            args:
                              url: ${move-gcs-bucket-url}
                              auth:
                                type: OIDC
                              headers:
                                Content-Type: "application/cloudevents+json"
                                X-Cloud-Trace-Context: $${map.get(step_result.headers, "X-Cloud-Trace-Context")}
                              body: $${step_result.body}
                            result: step_result
                        - search_github_issues:
                            call: http.post
                            args:
                              url: ${search-github-issue-url}
                              auth:
                                type: OIDC
                              headers:
                                Content-Type: "application/cloudevents+json"
                                X-Cloud-Trace-Context: $${map.get(step_result.headers, "X-Cloud-Trace-Context")}
                              body: $${step_result.body}
                            result: step_result
                        - check_if_issue_found:
                            switch:
                              - condition: $${step_result.body.type == "sap.tools.github.leakissue.notfound"}
                                steps:
                                  - create_github_issue:
                                      call: http.post
                                      args:
                                        url: ${create-github-issue-url}
                                        auth:
                                          type: OIDC
                                        headers:
                                          Content-Type: "application/cloudevents+json"
                                          X-Cloud-Trace-Context: $${map.get(step_result.headers, "X-Cloud-Trace-Context")}
                                        body: $${step_result.body}
                                      result: step_result
                                  - send_slack_message:
                                      call: http.post
                                      args:
                                        url: ${send-slack-message-url}/secret-leak-found
                                        auth:
                                          type: OIDC
                                        headers:
                                          Content-Type: "application/cloudevents+json"
                                          X-Cloud-Trace-Context: $${map.get(step_result.headers, "X-Cloud-Trace-Context")}
                                        body: $${step_result.body}
                                      result: step_result
                                  - return_result:
                                      return: $${step_result}
                            return: $${step_result}
                  return: $${step_result}
        next: end
