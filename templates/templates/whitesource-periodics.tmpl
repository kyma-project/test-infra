{{- define "commonProwJob" }}
    {{- if .JobConfig.repository}}
    - name: {{default .JobConfig.repository .JobConfig.custom_projectname}}{{if .JobConfig.whitesource_release}}-{{.JobConfig.Release}}{{end}}-whitesource-scan
    {{- else}}{{fail ".JobConfig.repository is not defined"}}
    {{- end}}
      {{- if .JobConfig.annotations}}
      annotations:
        {{- range $key, $value := .JobConfig.annotations}}
        {{$key}}: {{quote $value}}
        {{- end}}
      {{- end}}
      {{- if or .JobConfig.labels .JobConfig.project .JobConfig.product false}}
      labels:
        prow.k8s.io/pubsub.project: {{if .JobConfig.pubsub_project}}{{quote .JobConfig.pubsub_project}}{{else}}{{fail "mandatory .JobConfig.pubsub_project is not defined, probably globalSet jobConfig_default not inherited"}}{{end}}
        prow.k8s.io/pubsub.runID: "{{default .JobConfig.repository .JobConfig.custom_projectname}}{{if .JobConfig.whitesource_release}}-{{.JobConfig.Release}}{{end}}-whitesource-scan"
        prow.k8s.io/pubsub.topic: {{if .JobConfig.pubsub_topic}}{{quote .JobConfig.pubsub_topic}}{{else}}{{fail "mandatory .JobConfig.pubsub_topic is not defined, probably globalSet jobConfig_default not inherited"}}{{end}}
        {{- if .JobConfig.labels}}
        {{- range $key, $value := .JobConfig.labels}}
        {{$key}}: {{quote $value}}
        {{- end}}
        {{- end}}
        {{- if .JobConfig.project}}
        preset-sa-gke-kyma-integration-{{ .JobConfig.project }}-whitesource: "true"
        {{- end}}
        {{- if .JobConfig.product}}
        preset-whitesource-product-{{ .JobConfig.product }}: "true"
        {{- end}}
      {{- end}}
      {{- if .JobConfig.type_periodic }}
        {{- if .JobConfig.cron}}
      cron: {{quote .JobConfig.cron}}
        {{- else if .JobConfig.interval}}
      interval: {{.JobConfig.interval}}
        {{- else}}{{fail ".JobConfig.cron and .JobConfig.interval are not defined"}}{{end}}
      {{- else if .JobConfig.run_if_changed}}
      run_if_changed: {{squote .JobConfig.run_if_changed}}
      {{- else if .JobConfig.always_run}}
      always_run: {{.JobConfig.always_run}}
      {{- end}}
      {{- if .JobConfig.optional}}
      optional: {{.JobConfig.optional}}
      {{- end}}
      skip_report: {{if .JobConfig.skip_report}}{{.JobConfig.skip_report}}{{else}}{{fail ".JobConfig.skip_report is not defined"}}{{end}}
      {{- if .JobConfig.decorate}}
      decorate: {{.JobConfig.decorate}}
      {{- end}}
      {{- if .JobConfig.path_alias }}
      path_alias: {{ .JobConfig.path_alias }}
      {{- end }}
      {{- if .JobConfig.cluster}}
      cluster: {{.JobConfig.cluster }}
      {{- else}}{{ fail ".JobConfig.cluster is not defined"}}{{end}}
      {{- if not .JobConfig.type_periodic}}
      max_concurrency: {{if .JobConfig.max_concurrency}}{{.JobConfig.max_concurrency}}{{else}}{{fail ".JobConfig.max_concurrency is not defined"}}{{end}}
        {{- if .JobConfig.branches}}
      branches:
          {{- range .JobConfig.branches}}
        - {{ . }}
          {{- end}}
        {{- end}}
      {{- end}}
      {{- if .JobConfig.extra_refs}}
      extra_refs:
        {{- range $key, $value := .JobConfig.extra_refs}}
          {{- range $value}}
        - org: {{ .org }}
          repo: {{ .repo }}
          path_alias: {{ .path_alias }}
          base_ref: {{ .base_ref}}
          {{- end}}
        {{- end}}
        - org: {{ .JobConfig.project }}
          repo: {{ .JobConfig.repository }}
          path_alias: github.com/{{ .JobConfig.project }}/{{ .JobConfig.repository }}
          {{- if .JobConfig.whitesource_release}}
          base_ref: release-{{ .JobConfig.Release }}
          {{- else}}
          base_ref: {{ default (default "master" .JobConfig.base_ref)  .JobConfig.whitesource_release}}
          {{- end}}
      {{- end}}
      spec:
        containers:
          - image: {{ if .JobConfig.image }}{{quote .JobConfig.image}}{{else}}{{ fail ".JobConfig.image is not defined" }}{{end}}
            {{- if .JobConfig.imagePullPolicy }}
            imagePullPolicy: {{ .JobConfig.imagePullPolicy }}
            {{- end }}
            {{- if .JobConfig.automountServiceAccountToken}}
            automountServiceAccountToken: {{.JobConfig.automountServiceAccountToken}}
            {{- end}}
            {{- if .JobConfig.privileged}}
            securityContext:
              privileged: {{.JobConfig.privileged}}
            {{- end}}
            command:
              {{- if .JobConfig.command }}
              - {{ quote .JobConfig.command }}
              {{- else}} {{fail ".JobConfig.command is not defined"}}
              {{- end }}
            {{- with .JobConfig.args}}
            args:
              {{- range . }}
              - "{{ . }}"
              {{- end}}
            {{- end}}
            env:
              {{- if .JobConfig.env}}
              {{- range $key, $value := .JobConfig.env }}
              - name: {{$key}}
                value: "{{$value}}"
              {{- end}}
              {{- end}}
              - name : REPOSITORY
                value: {{ .JobConfig.repository }}
              - name: CREATE_SUBPROJECTS
                value: "{{ default "false" .JobConfig.subprojects }}"
              {{- if .JobConfig.custom_projectname }}
              - name: CUSTOM_PROJECTNAME
                value: {{ default "" .JobConfig.custom_projectname }}
              {{- end}}
              {{- if .JobConfig.exclude }}
              - name: CUSTOM_EXCLUDE
                value: "{{ default "" .JobConfig.exclude }}"
              {{- end}}
              - name: SCAN_LANGUAGE
                value: {{ .JobConfig.language }}
            {{- if or .JobConfig.request_memory .JobConfig.request_cpu false}}
            resources:
              requests:
                {{- if .JobConfig.request_memory}}
                memory: {{.JobConfig.request_memory}}
                {{- end}}
                {{- if .JobConfig.request_cpu}}
                cpu: {{.JobConfig.request_cpu}}
                {{- end}}
            {{- end}}
            {{- if .JobConfig.volumeMounts}}
            volumeMounts:
              {{- range .JobConfig.volumeMounts}}
              - name: {{ .name }}
                mountPath: {{ .mountPath }}
                readOnly: {{ .readOnly}}
              {{- end}}
            {{- end}}
        {{- if .JobConfig.volumes}}
        volumes:
          {{- range .JobConfig.volumes}}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            readOnly: {{ .readOnly}}
          {{- end}}
        {{- end}}
{{- end -}}

{{- $next_release := .Global.nextRelease }}
{{- $release := index .Global.releases 0 }}
{{- $release_previous := index .Global.releases 1 }}
periodics: # runs on schedule
  {{- range .Values.JobConfigs }}
  {{- range .Jobs -}}
  {{- if not .JobConfig.whitesource_release}}
  {{- if .JobConfig.type_periodic }}
  {{- template "commonProwJob" .}}
  {{- end}}
  {{- end}}
  {{- end}}
  {{end}}
#-------------Release-----------------------------
  {{- range .Values.JobConfigs }}
  {{- range .Jobs -}}
  {{- if .JobConfig.type_periodic }}
  {{- if .JobConfig.whitesource_release}}
  {{- if releaseMatches $release .JobConfig.release_since .JobConfig.release_until}}
  {{- $JobConf := set .JobConfig "Release" $release}}
  {{- $JobConf := set .JobConfig "product" "kyma-release"}}
  {{- $JobConfigDict := dict "JobConfig" $JobConf}}
  {{- template "commonProwJob" $JobConfigDict }}
  {{- end}}
  {{- end}}
  {{- end}}
  {{- end}}
  {{end}}

#-------------Previous Release--------------------
  {{- range .Values.JobConfigs }}
  {{- range .Jobs -}}
  {{- if .JobConfig.type_periodic }}
  {{- if .JobConfig.whitesource_release}}
  {{- if releaseMatches $release_previous  .JobConfig.release_since .JobConfig.release_until}}
  {{- $JobConf := set .JobConfig "Release" $release_previous}}
  {{- $JobConf := set .JobConfig "product" "kyma-release-previous"}}
  {{- $JobConfigDict := dict "JobConfig" $JobConf}}
  {{- template "commonProwJob" $JobConfigDict }}
  {{- end}}
  {{- end}}
  {{- end}}
  {{- end}}
  {{end}}
