prowjob_namespace: default
pod_namespace: default
decorate_all_jobs: true

plank:
  job_url_prefix_config:
    '*': https://status.build.kyma-project.io/view/
  report_templates:
    '*': >-
      [Full PR test history](https://status.build.kyma-project.io/pr-history?org={{"{{"}}.Spec.Refs.Org{{"}}"}}&repo={{"{{"}}.Spec.Refs.Repo{{"}}"}}&pr={{"{{"}}with index .Spec.Refs.Pulls 0{{"}}{{"}}.Number{{"}}{{"}}end{{"}}"}}).
      [Your PR dashboard](https://status.build.kyma-project.io/pr?query=is:pr+state:open+author:{{"{{"}}with
      index .Spec.Refs.Pulls 0{{"}}{{"}}.Author{{"}}{{"}}end{{"}}"}}).
  allow_cancellations: true # AllowCancellations enables aborting presubmit jobs for commits that have been superseded by newer commits in Github pull requests.
  max_concurrency: 100 # Limit of concurrent ProwJobs. Need to be adjusted depending of the cluster size.
  pod_pending_timeout: 60m
  default_decoration_configs:
    '*':
      timeout: 3h
      grace_period: 10m
      utility_images:
        clonerefs: gcr.io/k8s-prow/clonerefs:v20210625-e1bdf10806
        initupload: gcr.io/k8s-prow/initupload:v20210625-e1bdf10806
        entrypoint: gcr.io/k8s-prow/entrypoint:v20210625-e1bdf10806
        sidecar: gcr.io/k8s-prow/sidecar:v20210625-e1bdf10806
      gcs_configuration:
        bucket: kyma-prow-logs
        path_strategy: "explicit"
      gcs_credentials_secret: "sa-gcs-plank" # Service account with "Object Admin" role

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    gcs_browser_prefix: https://gcsweb.build.kyma-project.io/gcs/
    testgrid_config: gs://k8s-testgrid/config
    testgrid_root: https://testgrid.k8s.io/
    lenses:
      - lens:
          name: metadata
        required_files:
          - started.json|finished.json
      - lens:
          name: buildlog
        required_files:
          - build-log.txt
      - lens:
          name: junit
        required_files:
          - artifacts/junit.*\.xml
      - lens:
          name: podinfo
        required_files:
          - ^podinfo\.json$
  branding:
    header_color: "#0b74de" # Kyma color
    logo: "/static/extensions/logo.svg"
    favicon: "/static/extensions/favicon.png"
  rerun_auth_configs:
    '*':
      github_team_ids:
      - 3108790 # cluster-access GH team in Kyma organization

sinker:
  max_prowjob_age: 48h
  max_pod_age: 5h
  resync_period: 1m
  terminated_pod_ttl: 30m

push_gateway:
  endpoint: pushgateway
  serve_metrics: true

slack_reporter_configs:
  '*':
    job_types_to_report:
      - postsubmit
      - periodic
      - batch
    job_states_to_report:
      - failure
      - error
    channel: kyma-ci-force
    report_template: |
      {{`*Name:* {{.Spec.Job}}
      *Type:* {{.Spec.Type}}
      *Status:* {{.Status.State}}
      {{with .Spec.Refs}}*Repository:* {{.Org}}/{{.Repo}}
      *Commit:* <{{.BaseLink}}|{{printf "%.7s" .BaseSHA}}>
      {{end}}*<{{.Status.URL}}|View logs>*`}}

branch-protection:
  enforce_admins: true
  allow_disabled_policies: true
  required_pull_request_reviews:
    dismiss_stale_reviews: true
    require_code_owner_reviews: true
    required_approving_review_count: 1
  # all jobs that have ContextRequired() set to true are also treated as required_status_checks, so there is no point to mention it here.
  required_status_checks:
    contexts:
      - license/cla
      - tide
  orgs:
    kyma-project:
      protect: true # protect all repos & branches in kyma-project org
      repos:
        kyma:
          branches:
            kyma-2.0-docu:
              required_pull_request_reviews:
                require_code_owner_reviews: false
        website:
          branches:
            main:
              required_status_checks:
                contexts:
                  - "netlify/kyma-project/deploy-preview"
            archive-snapshots:
              required_status_checks:
                contexts:
                  - "netlify/kyma-project-old/deploy-preview"
    kyma-incubator:
      protect: true # protect all repos & branches in kyma-incubator org
      repos:
        compass:
          protect: false
          branches:
            master:
              protect: true
              required_status_checks:
                strict: true
        compass-console:
          protect: false
          branches:
            main:
              protect: true
              required_status_checks:
                strict: true
        ord-service:
          protect: false
          branches:
            main:
              protect: true
              required_status_checks:
                strict: true
        reconciler:
          protect: false
          branches:
            main:
              protect: true
              required_status_checks:
                strict: true

tide:
  sync_period: 2m
  batch_size_limit:
    kyma-project/kyma: -1 # disable batch merging for Kyma repo
  merge_method:
    kyma-project/kyma: squash
    kyma-project/website: squash
    kyma-project/test-infra: squash
    kyma-project/busola: squash
    kyma-project/control-plane: squash
    kyma-project/third-party-images: squash
    kyma-project/hydroform: squash
    kyma-project/cli: squash
    kyma-project/community: squash
    kyma-project/console: squash
    kyma-project/examples: squash
    kyma-project/helm-broker: squash
    kyma-project/addons: squash
    kyma-project/busola-migrator: squash
    kyma-project/rafter: squash

    kyma-incubator/compass: squash
    kyma-incubator/reconciler: squash
    kyma-incubator/api-gateway: squash
    kyma-incubator/local-kyma: squash
    kyma-incubator/compass-console: squash
    kyma-incubator/ord-service: squash
    kyma-incubator/documentation-component: squash
    kyma-incubator/terraform-provider-gardener: squash
    kyma-incubator/bullseye-showcase: squash
    kyma-incubator/milv: squash
    kyma-incubator/podpreset-crd: squash
    kyma-incubator/service-catalog-tester: squash
    kyma-incubator/kymart: squash
    kyma-incubator/terraform-provider-kind: squash
    kyma-incubator/dex: squash
    kyma-incubator/varkes: squash
#    kyma-incubator/marketplaces: squash
    kyma-incubator/octopus: squash
    kyma-incubator/knative-kafka: squash
    kyma-incubator/examples: squash
    kyma-incubator/github-dashboard: squash
    kyma-incubator/vstudio-extension: squash
    kyma-incubator/wordpress-connector: squash
    kyma-incubator/terraform-modules: squash
    kyma-incubator/connector-tools: squash
#    kyma-incubator/github-slack-connectors: squash
    kyma-incubator/service-catalog: squash
    kyma-incubator/gcp-service-broker: squash
#    kyma-incubator/homebrew-kyma-incubator: squash
#    kyma-incubator/runtime: squash
    kyma-incubator/artwork: squash
    kyma-incubator/opensap: squash
#    kyma-incubator/wormhole: squash
#    kyma-incubator/k8s-service-catalog: squash
  target_url: https://status.build.kyma-project.io/tide
  pr_status_base_urls:
    '*': https://status.build.kyma-project.io/pr
  squash_label: tide/merge-method-squash
  rebase_label: tide/merge-method-rebase
  merge_label: tide/merge-method-merge
  queries:
    - labels:
        - lgtm
      missingLabels:
        - needs-rebase
        - do-not-merge/hold
        - do-not-merge/work-in-progress
        - do-not-merge/invalid-owners-file
        - do-not-merge/invalid-commit-message
      orgs:
        - kyma-project
      reviewApprovedRequired: true
    - labels:
        - lgtm
      missingLabels:
        - needs-rebase
        - do-not-merge/hold
        - do-not-merge/work-in-progress
        - do-not-merge/invalid-owners-file
        - do-not-merge/invalid-commit-message
      orgs:
        - kyma-incubator
      reviewApprovedRequired: true
  context_options:
    from-branch-protection: true
#    skip-unknown-contexts: true

presets:
  - labels:
      preset-execute-fast-integration-tests: "true"
    env:
      - name: EXECUTE_FAST_INTEGRATION_TESTS
        value: "true"
  - labels:
      preset-recreate-cluster: "true"
    env:
    - name: RECREATE_CLUSTER
      value: "true"
  - labels:
      preset-slack-alerts: "true"
    env:
      - name: STABILITY_SLACK_CLIENT_CHANNEL_ID
        value: "#kyma-ci-force"
      - name: KYMA_ALERTS_SLACK_API_URL
        valueFrom:
          secretKeyRef:
            name: kyma-alerts-slack-api-url
            key: secret
      - name: KYMA_ALERTS_CHANNEL
        value: "#kyma-ci-force"
  # cluster version
  - labels:
      preset-cluster-version: "true"
    env:
      - name: AKS_CLUSTER_VERSION
        value: "1.19"
      - name: GKE_CLUSTER_VERSION
        value: "1.18"
      - name: GARDENER_CLUSTER_VERSION
        value: "1.20"
  # test clusters log collector
  - labels:
      preset-log-collector-slack-token: "true"
    env:
      - name: LOG_COLLECTOR_SLACK_TOKEN
        valueFrom:
          secretKeyRef:
            name: log-collector-slack-token
            key: token
  # debug commando
  - labels:
      preset-debug-commando-oom: "true"
    env:
      - name: DEBUG_COMMANDO_OOM
        value: "true"
  # pjtester
  - labels:
      preset-pjtester-kubeconfig: "true"
    env:
      - name: KUBECONFIG_PATH
        value: /etc/kubeconfig/pjtester/config
    volumes:
      - name: pjtester-kubeconfig
        secret:
          secretName: pjtester-kubeconfig
    volumeMounts:
      - name: pjtester-kubeconfig
        mountPath: /etc/kubeconfig/pjtester
        readOnly: true
  # rafter
  - labels:
      preset-rafter-build-main: "true"
    env:
      - name: BUILD_TYPE
        value: master
      - name: DOCKER_PUSH_DIRECTORY
        value: ""
  - labels:
      preset-gke-rapid: "true"
    env:
      - name: GKE_RELEASE_CHANNEL
        value: rapid
  - labels:
      preset-sa-prow-job-resource-cleaner: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-prow-job-resource-cleaner/service-account.json
    volumes:
      - name: sa-prow-job-resource-cleaner
        secret:
          secretName: sa-prow-job-resource-cleaner
    volumeMounts:
      - name: sa-prow-job-resource-cleaner
        mountPath: /etc/credentials/sa-prow-job-resource-cleaner
        readOnly: true
  - labels:
      preset-certificates-bucket: "true"
    env:
      - name: CERTIFICATES_BUCKET
        value: "kyma-prowjobs-secrets"
  - labels:
      preset-gke-kyma-developers-group: "true"
    env:
      - name: GCLOUD_SECURITY_GROUP
        value: "kyma_developers"
      - name: GCLOUD_SECURITY_GROUP_DOMAIN
        value: "sap.com"
  - labels:
      preset-gc-compute-envs: "true"
    env:
      - name: CLOUDSDK_COMPUTE_REGION
        value: "europe-west4"
  - labels:
      preset-gc-project-env: "true"
    env:
      - name: CLOUDSDK_CORE_PROJECT
        value: "sap-kyma-prow-workloads"
  - labels:
      preset-kms-gc-project-env: "true"
    env:
      - name: CLOUDSDK_KMS_PROJECT
        value: "sap-kyma-prow-workloads"
  - labels:
      preset-sa-vm-kyma-integration: "true" # Service account with "Compute Admin" and "Compute OS Admin Login" roles
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-vm-kyma-integration/service-account.json
    volumes:
      - name: sa-vm-kyma-integration
        secret:
          secretName: sa-vm-kyma-integration
      - name: sa-vm-kyma-ssh-key # https://github.com/kyma-project/kyma/issues/10818
        secret:
          secretName: sa-vm-kyma-ssh-key
          defaultMode: 0700
    volumeMounts:
      - name: sa-vm-kyma-integration
        mountPath: /etc/credentials/sa-vm-kyma-integration
        readOnly: true
      - name: sa-vm-kyma-ssh-key
        mountPath: /root/.ssh
  - labels:
      preset-sa-gke-kyma-integration: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gke-kyma-integration/service-account.json
      - name: CLOUDSDK_DNS_ZONE_NAME
        value: "build-kyma-workloads" #GCloud DNS Zone Name (NOT it's DNS name!)
      - name: KYMA_PROJECT_DIR
        value: "/home/prow/go/src/github.com/kyma-project"
    volumes:
      - name: sa-gke-kyma-integration
        secret:
          secretName: sa-gke-kyma-integration
    volumeMounts:
      - name: sa-gke-kyma-integration
        mountPath: /etc/credentials/sa-gke-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gcr-push: "true" # Service account with "Storage Admin" role
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gcr-push-kyma-project/service-account.json
    volumes:
      - name: sa-gcr-push-kyma-project
        secret:
          secretName: sa-gcr-push-kyma-project
    volumeMounts:
      - name: sa-gcr-push-kyma-project
        mountPath: /etc/credentials/sa-gcr-push-kyma-project
        readOnly: true
  - labels:
      preset-sa-test-gcr-push: "true" # Service account with write access to test gcr.
    env:
      - name: GCR_PUSH_GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-test-gcr-push/service-account.json
    volumes:
      - name: sa-test-gcr-push
        secret:
          secretName: sa-gcr-push-kyma-project
    volumeMounts:
      - name: sa-test-gcr-push
        mountPath: /etc/credentials/sa-test-gcr-push
        readOnly: true
  - labels:
      preset-sa-kyma-artifacts: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-kyma-artifacts/service-account.json
    volumes:
      - name: sa-kyma-artifacts
        secret:
          secretName: sa-kyma-artifacts
    volumeMounts:
      - name: sa-kyma-artifacts
        mountPath: /etc/credentials/sa-kyma-artifacts
  # Gardener presets
  - labels:
      preset-sa-kyma-push-artifacts: "true"
    env:
      - name: SA_KYMA_ARTIFACTS_GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-kyma-artifacts/service-account.json
    volumes:
      - name: sa-kyma-artifacts
        secret:
          secretName: sa-kyma-artifacts
    volumeMounts:
      - name: sa-kyma-artifacts
        mountPath: /etc/credentials/sa-kyma-artifacts
  - labels:
      preset-sa-gardener-logs: "true"
    env:
      - name: SA_GARDENER_LOGS
        value: /etc/credentials/sa-gardener-logs/service-account.json
    volumes:
      - name: sa-gardener-logs
        secret:
          secretName: sa-gardener-logs
    volumeMounts:
      - name: sa-gardener-logs
        mountPath: /etc/credentials/sa-gardener-logs
        readOnly: true
  - labels:
      preset-sa-prow-job-github-issues: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-prow-job-github-issues/service-account.json
    volumes:
      - name: sa-prow-job-github-issues
        secret:
          secretName: sa-prow-job-github-issues
    volumeMounts:
      - name: sa-prow-job-github-issues
        mountPath: /etc/credentials/sa-prow-job-github-issues
        readOnly: true
  - labels:
      preset-gardener-azure-kyma-integration: "true"
    env:
      - name: GARDENER_KYMA_PROW_KUBECONFIG
        value: /etc/credentials/gardener-kyma-prow/kubeconfig
      - name: GARDENER_KYMA_PROW_PROJECT_NAME
        value: "kyma-prow"
      - name: GARDENER_KYMA_PROW_PROVIDER_SECRET_NAME
        value: "kyma-azure"
      - name: GARDENER_PROVIDER
        value: "azure"
    volumes:
      - name: gardener-kyma-prow-kubeconfig
        secret:
          secretName: gardener-kyma-prow-kubeconfig
    volumeMounts:
      - name: gardener-kyma-prow-kubeconfig
        mountPath: /etc/credentials/gardener-kyma-prow
  - labels:
      preset-gardener-gcp-kyma-integration: "true"
    env:
      - name: GARDENER_KYMA_PROW_KUBECONFIG
        value: /etc/credentials/gardener-kyma-prow/kubeconfig
      - name: GARDENER_KYMA_PROW_PROJECT_NAME
        value: "kyma-prow"
      - name: GARDENER_KYMA_PROW_PROVIDER_SECRET_NAME
        value: "kyma-gcp-workloads"
      - name: GARDENER_PROVIDER
        value: "gcp"
    volumes:
      - name: gardener-kyma-prow-kubeconfig
        secret:
          secretName: gardener-kyma-prow-kubeconfig
    volumeMounts:
      - name: gardener-kyma-prow-kubeconfig
        mountPath: /etc/credentials/gardener-kyma-prow
  - labels:
      preset-gardener-aws-kyma-integration: "true"
    env:
      - name: GARDENER_KYMA_PROW_KUBECONFIG
        value: /etc/credentials/gardener-kyma-prow/kubeconfig
      - name: GARDENER_KYMA_PROW_PROJECT_NAME
        value: "kyma-prow"
      - name: GARDENER_KYMA_PROW_PROVIDER_SECRET_NAME
        value: "prow-dev-aws"
      - name: GARDENER_PROVIDER
        value: "aws"
    volumes:
      - name: gardener-kyma-prow-kubeconfig
        secret:
          secretName: gardener-kyma-prow-kubeconfig
    volumeMounts:
      - name: gardener-kyma-prow-kubeconfig
        mountPath: /etc/credentials/gardener-kyma-prow
  - labels:
      preset-gardener-neighbors: "true"
    env:
      - name: GARDENER_KUBECONFIG
        value: /etc/credentials/gardener-neighbors/kubeconfig
      - name: GARDENER_PROJECT_NAME
        value: "neighbors"
      - name: GARDENER_PROVIDER_SECRET_NAME
        value: "neighbors-gardener"
    volumes:
      - name: gardener-neighbors-kubeconfig
        secret:
          secretName: gardener-neighbors-kubeconfig
    volumeMounts:
      - name: gardener-neighbors-kubeconfig
        mountPath: /etc/credentials/gardener-neighbors
  - labels:
      preset-az-kyma-prow-credentials: "true"
    env:
      - name: AZURE_CREDENTIALS_FILE
        value: /etc/credentials/az-kyma-prow-credentials/azure-credentials.json
      - name: AZURE_SUBSCRIPTION_ID
        valueFrom:
          secretKeyRef:
            name: kyma-azure-credential-id
            key: subscription-id
    volumes:
      - name: az-kyma-prow-credentials
        secret:
          secretName: az-kyma-prow-credentials
    volumeMounts:
      - name: az-kyma-prow-credentials
        mountPath: /etc/credentials/az-kyma-prow-credentials

  - labels:
      preset-dind-enabled: "true"
    env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
    volumes:
      - name: docker-graph
        emptyDir: {}
    volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
  - labels:
      preset-docker-push-repository: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project"
  - labels:
      preset-docker-push-repository-kyma: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project"
  - labels:
      preset-docker-push-repository-gke-integration: "true" # Needed for kyma installer image
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/sap-kyma-prow"
  - labels:
      preset-docker-push-repository-test-infra: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/test-infra"
  - labels:
      preset-docker-push-repository-incubator: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/incubator"
  - labels:
      preset-docker-push-repository-tpi: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/tpi"
  - labels:
      preset-docker-push-repository-control-plane: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/control-plane"
  - labels:
      preset-docker-push-repository-global: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "gcr.io/kyma-project"
  - labels:
      preset-build-pr: "true"
    env:
      - name: BUILD_TYPE
        value: pr
      - name: DOCKER_PUSH_DIRECTORY
        value: "/pr"
  - labels:
      preset-build-main: "true"
    env:
      - name: BUILD_TYPE
        value: master
      - name: DOCKER_PUSH_DIRECTORY
        value: "/develop"
  - labels:
      preset-build-artifacts-main: "true"
    env:
      - name: BUILD_TYPE
        value: master
  - labels:
      preset-build-console-main: "true"
    env:
      - name: BUILD_TYPE
        value: master
  - labels:
      preset-build-release: "true"
    env:
      - name: BUILD_TYPE
        value: release
  - labels:
      preset-bot-npm-token: "true"
    env:
      - name: BOT_NPM_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-npm-token
            key: token
  # Kyma-bot
  - labels:
      preset-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-github-token
            key: token
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-github-token
            key: token
  - labels:
      preset-bot-github-sap-token: "true"
    env:
      - name: BOT_GITHUB_SAP_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-github-sap-token
            key: token
  - labels:
      preset-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kyma.bot@sap.com"
      - name: BOT_GITHUB_USER
        value: "Kyma Bot"
  # Kyma-website-bot
  - labels:
      preset-website-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-website-bot-github-token
            key: token
  - labels:
      preset-website-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kymaopensource@gmail.com"
      - name: BOT_GITHUB_USER
        value: "kyma-website-bot"
  - labels:
      preset-website-bot-github-ssh: "true"
    env:
      - name: BOT_GITHUB_SSH_PATH
        value: /etc/credentials/kyma-website-bot-github-ssh/key.pem
    volumes:
      - name: kyma-website-bot-github-ssh
        secret:
          secretName: kyma-website-bot-github-ssh
    volumeMounts:
      - name: kyma-website-bot-github-ssh
        mountPath: /etc/credentials/kyma-website-bot-github-ssh
        readOnly: true
  - labels:
      preset-website-bot-zenhub-token: "true"
    env:
      - name: BOT_ZENHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-website-bot-zenhub-token
            key: token
  # Kyma Guard Bot
  - labels:
      preset-kyma-guard-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-guard-bot-github-token
            key: token
    # for new jobguard which does not use env for tokens
    volumes:
      - name: kyma-guard-bot-token-path
        secret:
          secretName: kyma-guard-bot-github-token
    volumeMounts:
      - name: kyma-guard-bot-token-path
        mountPath: /etc/github
        readOnly: true
  - labels:
      preset-kyma-guard-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kymabotguard@gmail.com"
      - name: BOT_GITHUB_USER
        value: "kyma-guard-bot"
  - labels:
      preset-sap-slack-bot-token: "true"
    env:
      - name: SAP_SLACK_BOT_TOKEN
        valueFrom:
          secretKeyRef:
            name: sap-slack-bot-token
            key: token
  - labels:
      preset-kyma-artifacts-bucket: "true"
    env:
      - name: KYMA_ARTIFACTS_BUCKET
        value: gs://kyma-prow-artifacts
  - labels:
      preset-kyma-cli-stable: "true"
    env:
      - name: KYMA_CLI_STABLE_BUCKET
        value: gs://kyma-cli-stable
      - name: STABLE
        value: "true"
  - labels:
      preset-stability-checker-slack-notifications: "true"
    env:
      - name: SLACK_CLIENT_WEBHOOK_URL
        value: https://sap-btp.slack.com/services/hooks/jenkins-ci
      - name: SLACK_CLIENT_TOKEN
        valueFrom:
          secretKeyRef:
            name: slack-nightly-token
            key: token
  - labels:
      preset-nightly-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: nightly-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nightly-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-weekly-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: weekly-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: weekly-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-nightly-aks-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: nightly-aks-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nightly-aks-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-kyma-keyring: "true"
    env:
      - name: KYMA_KEYRING
        value: "prow-workloads-keyring"
  - labels:
      preset-kyma-development-artifacts-bucket: "true"
    env:
      - name: KYMA_DEVELOPMENT_ARTIFACTS_BUCKET
        value: "gs://kyma-development-artifacts"
  - labels:
      preset-kyma-encryption-key: "true"
    env:
      - name: KYMA_ENCRYPTION_KEY
        value: prow-workloads-encrypt
  - labels:
      preset-kyma-slack-channel: "true"
    env:
      - name: SLACK_CHANNEL
        value: CBMPTMCV9
  - labels:
      preset-kyma-wssagent-config: "true"
    env:
      - name: PRODUCTNAME
        value: "OOSS - KYMA"
  # volume mounts for kind
  - labels:
      preset-kind-volume-mounts: "true"
    volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
    volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
  - labels:
      preset-cluster-use-ssd: "true"
    env:
      - name: CLUSTER_USE_SSD
        value: "true"
  - labels:
      preset-gke-pod-security-policy: "true"
    env:
      - name: GKE_ENABLE_POD_SECURITY_POLICY
        value: "true"
  # whitesource labels
  - labels:
      preset-wssagent-keys: "true"
    env:
      - name: WHITESOURCE_APIKEY
        value: /etc/credentials/whitesource-apikey/apikey
      - name: WHITESOURCE_USERKEY
        value: /etc/credentials/whitesource-userkey/userkey
    volumes:
      - name: whitesource-apikey
        secret:
          secretName: whitesource-apikey
      - name: whitesource-userkey
        secret:
          secretName: whitesource-userkey
    volumeMounts:
      - name: whitesource-apikey
        mountPath: /etc/credentials/whitesource-apikey
        readOnly: true
      - name: whitesource-userkey
        mountPath: /etc/credentials/whitesource-userkey
        readOnly: true
  - labels:
      preset-sa-gke-kyma-integration-kyma-incubator-whitesource: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gke-kyma-integration/service-account.json
      - name: CLOUDSDK_DNS_ZONE_NAME
        value: "build-kyma-workloads" #GCloud DNS Zone Name (NOT it's DNS name!)
      - name: GITHUB_ORG_DIR
        value: "/home/prow/go/src/github.com/kyma-incubator"
    volumes:
      - name: sa-gke-kyma-integration
        secret:
          secretName: sa-gke-kyma-integration
    volumeMounts:
      - name: sa-gke-kyma-integration
        mountPath: /etc/credentials/sa-gke-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gke-kyma-integration-kyma-project-whitesource: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gke-kyma-integration/service-account.json
      - name: CLOUDSDK_DNS_ZONE_NAME
        value: "build-kyma-workloads" #GCloud DNS Zone Name (NOT it's DNS name!)
      - name: GITHUB_ORG_DIR
        value: "/home/prow/go/src/github.com/kyma-project"
    volumes:
      - name: sa-gke-kyma-integration
        secret:
          secretName: sa-gke-kyma-integration
    volumeMounts:
      - name: sa-gke-kyma-integration
        mountPath: /etc/credentials/sa-gke-kyma-integration
        readOnly: true
  - labels:
      preset-kyma-integration-compass-dev: "true"
    env:
      - name: COMPASS_TENANT
        valueFrom:
          secretKeyRef:
            name: compass-dev-credentials
            key: COMPASS_TENANT
      - name: COMPASS_HOST
        valueFrom:
          secretKeyRef:
            name: compass-dev-credentials
            key: COMPASS_HOST
      - name: COMPASS_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: compass-dev-credentials
            key: COMPASS_CLIENT_ID
      - name: COMPASS_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: compass-dev-credentials
            key: COMPASS_CLIENT_SECRET
  - labels:
      preset-kyma-integration-compass-enabled: "true"
    env:
      - name: COMPASS_INTEGRATION_ENABLED
        value: "true"
  - labels:
      preset-kyma-integration-central-app-gateway-enabled: "true"
    env:
      - name: CENTRAL_APPLICATION_GATEWAY_ENABLED
        value: "true"
  - labels:
      preset-keb-dev-credentials: "true"
    env:
      - name: KEB_HOST
        valueFrom:
          secretKeyRef:
            name: keb-dev-credentials
            key: KEB_HOST
      - name: KEB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: keb-dev-credentials
            key: KEB_CLIENT_ID
      - name: KEB_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: keb-dev-credentials
            key: KEB_CLIENT_SECRET
      - name: KEB_GLOBALACCOUNT_ID
        valueFrom:
          secretKeyRef:
            name: keb-dev-credentials
            key: KEB_GLOBALACCOUNT_ID
      - name: KEB_SUBACCOUNT_ID
        value: "prow-keb-integration"
      - name: KEB_USER_ID
        value: "test@test.com"
      - name: GARDENER_KUBECONFIG
        value: "/gardener/kubeconfig"
    volumes:
      - name: gardener-skr-kyma-dev-kubeconfig
        secret:
          secretName: gardener-skr-kyma-dev-kubeconfig
    volumeMounts:
      - name: gardener-skr-kyma-dev-kubeconfig
        mountPath: "/gardener"
        readOnly: true
  - labels:
      preset-keb-plan-azure: "true"
    env:
      - name: KEB_PLAN_ID
        value: "4deee563-e5ec-4731-b9b1-53b42d855f0c"
  - labels:
      preset-keb-plan-gcp: "true"
    env:
      - name: KEB_PLAN_ID
        value: "ca6e5357-707f-4565-bbbd-b3ab732597c6"
  - labels:
      preset-keb-plan-aws: "true"
    env:
      - name: KEB_PLAN_ID
        value: "361c511f-f939-4621-b228-d0fb79a1fe15"
  - labels:
      preset-keb-plan-azure-lite: "true"
    env:
      - name: KEB_PLAN_ID
        value: "8cb22518-aa26-44c5-91a0-e669ec9bf443"
  - labels:
      preset-keb-plan-trial: "true"
    env:
      - name: KEB_PLAN_ID
        value: "7d55d31d-35ae-4438-bf13-6ffdfa107d9f"
  - labels:
      preset-keb-plan-openstack: "true"
    env:
      - name: KEB_PLAN_ID
        value: "03b812ac-c991-4528-b5bd-08b303523a63"
  - labels:
      preset-keb-plan-free-aws: "true"
    env:
      - name: KEB_PLAN_ID
        value: "b1a5764e-2ea1-4f95-94c0-2b4538b37b55"
      - name: KEB_REGION
        value: "cf-eu10"
  - labels:
      preset-keb-plan-free-azure: "true"
    env:
      - name: KEB_PLAN_ID
        value: "b1a5764e-2ea1-4f95-94c0-2b4538b37b55"
      - name: KEB_REGION
        value: "cf-eu20"
  - labels:
      preset-gke-upgrade-pre-job: "true"
    env:
      - name: SCENARIO_TYPE
        value: pre
  - labels:
      preset-gke-upgrade-pre-release-job: "true"
    env:
      - name: SCENARIO_TYPE
        value: release
  - labels:
      preset-gke-upgrade-post-job: "true"
    env:
      - name: SCENARIO_TYPE
        value: post
  - labels:
      preset-busola-nightly-provision-type-busola: "true"
    env:
      - name: BUSOLA_PROVISION_TYPE
        value: BUSOLA
  - labels:
      preset-busola-nightly-provision-type-kyma: "true"
    env:
      - name: BUSOLA_PROVISION_TYPE
        value: KYMA
  - labels:
      preset-skr-al-service-key: "true"
    env:
      - name: AL_SERVICE_KEY
        valueFrom:
          secretKeyRef:
            name: skr-al-secret-key
            key: secret.json
  - labels:
      preset-kyma-periodic-nightly-letsencypt-protection: "true"
    env:
    - name: LETSENCRYPT_LIMITS_PROTECTION
      value: "true"
