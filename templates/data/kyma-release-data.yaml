{{ $rel := .Global.nextRelease -}}
{{ $relShort := $rel | replace "." "" }}
templates:
  - from: generic.tmpl
    render:
      - to: ../../prow/jobs/kyma/releases/kyma-release-{{ $relShort }}.yaml
        localSets:
          bot_token:
            labels:
              preset-kyma-guard-bot-github-token: "true"
              preset-gc-project-env: "true"
          gke_config:
            labels:
              preset-sa-gke-kyma-integration: "true"
              preset-gc-compute-envs: "true"
              preset-docker-push-repository-gke-integration: "true"
              preset-dind-enabled: "true"
              preset-kyma-artifacts-bucket: "true"
              preset-cluster-use-ssd: "true"
              preset-cluster-version: "true"
            request_memory: 200Mi
            request_cpu: 80m
          test-infra:
            extra_refs:
              test-infra:
                - org: kyma-project
                  repo: test-infra
                  base_ref: release-{{ $rel }}
          kyma:
            extra_refs:
              kyma:
                - org: kyma-project
                  repo: kyma
                  base_ref: release-{{ $rel }}
          request_small:
            request_memory: 100Mi
            request_cpu: 50m
          vm_job_template_k3d:
            annotations:
            command: "/home/prow/go/src/github.com/kyma-project/test-infra/prow/scripts/provision-vm-and-start-kyma-k3d.sh"
        jobConfigs:
          - repoName: kyma-project/kyma
            jobs:
              - jobConfig:
                  name: "post-rel{{ $relShort }}-kyma-integration-k3d"
                  slack_channel: kyma-skr-release
                  # following regexp won't start build if only Markdown files were changed
                  run_if_changed: "^((tests/fast-integration\\S+|resources\\S+|installation\\S+|tools/kyma-installer\\S+)(\\.[^.][^.][^.]+$|\\.[^.][^dD]$|\\.[^mM][^.]$|\\.[^.]$|/[^.]+$))"
                  branches:
                    - ^release-{{ $rel }}$
                  labels:
                    preset-build-release: "true"
                    preset-sa-vm-kyma-integration: "true"
                  annotations:
                    description: "Kyma integration job on k3d."
                    owner: "huskies,goat"
                    testgrid-dashboards: kyma_release-{{ $rel }}
                    testgrid-days-of-results: "60"
                inheritedConfigs:
                  global:
                    - "jobConfig_default"
                    - "jobConfig_postsubmit"
                    - "image_kyma-integration"
                  local:
                    - "request_small"
                    - "vm_job_template_k3d"
                    - "test-infra"
                    - "bot_token"
              - jobConfig:
                  name: "pre-rel{{ $relShort }}-kyma-integration-k3d"
                  # following regexp won't start build if only Markdown files were changed
                  run_if_changed: "^((tests/fast-integration\\S+|resources\\S+|installation\\S+|tools/kyma-installer\\S+)(\\.[^.][^.][^.]+$|\\.[^.][^dD]$|\\.[^mM][^.]$|\\.[^.]$|/[^.]+$))"
                  branches:
                    - ^release-{{ $rel }}$
                  labels:
                    preset-build-release: "true"
                    preset-sa-vm-kyma-integration: "true"
                  annotations:
                    owner: neighbors
                    description: k3d int test
                inheritedConfigs:
                  global:
                    - "jobConfig_default"
                    - "jobConfig_presubmit"
                    - "image_kyma-integration"
                  local:
                    - "request_small"
                    - "vm_job_template_k3d"
                    - "test-infra"
                    - "bot_token"
              - jobConfig:
                  name: post-rel{{ $relShort }}-kyma-release-candidate
                  slack_channel: kyma-skr-release
                  branches:
                    - '^{{ $rel }}\.\d+(?:-.*)?$' # release tags
                  annotations:
                    owner: neighbors
                    testgrid-dashboards: kyma_release-{{ $rel }}
                    description: Release candidate job for Kyma {{ $rel }}.
                    testgrid-days-of-results: "60"
                  labels:
                    preset-dind-enabled: "true"
                    preset-sa-gke-kyma-integration: "true"
                    preset-gc-project-env: "true"
                    preset-gke-kyma-developers-group: "true"
                    preset-docker-push-repository-kyma: "true"
                    preset-cluster-version: "true"
                    preset-gc-compute-envs: "true"
                    preset-certificates-bucket: "true"
                    preset-kyma-keyring: "true"
                    preset-kyma-encryption-key: "true"
                    preset-kms-gc-project-env: "true"
                    preset-cluster-use-ssd: "true"
                  env:
                    EVENTMESH_SECRET_FILE: "/etc/credentials/kyma-tunas-release-testing-event-mesh/serviceKey"
                    PROVISION_REGIONAL_CLUSTER: "true"
                    MACHINE_TYPE: "n1-highcpu-16"
                    PUBSUB_PROJECT: "sap-kyma-prow"
                    PUBSUB_TOPIC: "release-cluster-created"
                  securityContext:
                    privileged: "true"
                    seccompProfile:
                      type: Unconfined
                  decoration_config:
                    timeout: 3600000000000 # 1h
                    grace_period: 600000000000 # 10min
                  volumes:
                    - name: kyma-tunas-release-testing-event-mesh
                      secretName: kyma-tunas-release-testing-event-mesh
                  volumeMounts:
                    - name: kyma-tunas-release-testing-event-mesh
                      mountPath: /etc/credentials/kyma-tunas-release-testing-event-mesh
                      readOnly: true
                  command: "bash"
                  request_memory: 200Mi
                  request_cpu: 80m
                  args:
                    - "-c"
                    - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-release-candidate.sh"
                inheritedConfigs:
                  global:
                    - "jobConfig_default"
                    - "jobConfig_postsubmit"
                    - "image_kyma-integration"
                  local:
                    - "test-infra"
              - jobConfig:
                  name: "kyma-gke-nightly-rel{{ $relShort }}"
                  slack_channel: kyma-skr-release
                  cron: "0 3 * * 1-5" # "At 03:00 UTC on every weekday Monday through Friday"
                  annotations:
                    owner: neighbors
                    description: Kyma GKE nightly build (release-{{ $rel }})
                    testgrid-dashboards: kyma_release-{{ $rel }}
                    testgrid-days-of-results: "60"
                  cluster: "trusted-workload"
                  labels:
                    preset-kyma-keyring: "true"
                    preset-kyma-encryption-key: "true"
                    preset-build-main: "true"
                    preset-nightly-github-integration: "true"
                    preset-kms-gc-project-env: "true"
                    preset-certificates-bucket: "true"
                    preset-slack-alerts: "true"
                  command: "bash"
                  args:
                  - "-c"
                  - "${KYMA_PROJECT_DIR}/test-infra/prow/scripts/cluster-integration/kyma-gke-long-lasting.sh"
                  env:
                    MACHINE_TYPE: "custom-8-15360"
                    PROVISION_REGIONAL_CLUSTER: "true"
                    NODES_PER_ZONE: "1"
                    STACKDRIVER_COLLECTOR_SIDECAR_IMAGE_TAG: "0.6.4"
                    INPUT_CLUSTER_NAME: "nightly-{{ $relShort }}"
                    GITHUB_TEAMS_WITH_KYMA_ADMINS_RIGHTS: "cluster-access"
                    CLOUDSDK_COMPUTE_ZONE: "europe-west4-b"
                    TEST_RESULT_WINDOW_TIME: "6h"
                  securityContext:
                    privileged: "true"
                    seccompProfile:
                      type: Unconfined
                inheritedConfigs:
                  global:
                  - "jobConfig_default"
                  - "jobConfig_periodic"
                  - "image_kyma-integration"
                  local:
                  - "gke_config"
                  - "test-infra"
                  - "kyma"
                  - "bot_token"
