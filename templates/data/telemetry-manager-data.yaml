templates:
  - from: generic.tmpl
    render:
      - to: ../../prow/jobs/telemetry-manager/telemetry-manager.yaml
        localSets:
          job_default:
            privileged: false
          vm_job_make:
            path_alias: github.com/kyma-project/telemetry-manager
            command: "bash"
            env:
              JOB_REPO_NAME: "telemetry-manager"
            args:
              - "-c"
              - "/home/prow/go/src/github.com/kyma-project/test-infra/prow/scripts/provision-vm-and-run-manager.sh"
            request_memory: 200Mi
            request_cpu: 80m
          vm_job_labels:
            labels:
              preset-kyma-guard-bot-github-token: "true"
              preset-sa-vm-kyma-integration: "true"
              preset-gc-project-env: "true"
          vm_job_k3d:
            annotations:
              pipeline.platform: k3d
              pipeline.installer: kyma deploy
              pipeline.clusterprovisioning: k3d
        jobConfigs:
          - repoName: "github.com/kyma-project/telemetry-manager"
            jobs:
              - jobConfig:
                  name: pull-telemetry-manager-build
                  always_run: true
                  args:
                    - "--name=telemetry-manager"
                    - "--config=/config/kaniko-build-config.yaml"
                    - "--context=."
                    - "--dockerfile=Dockerfile"
                inheritedConfigs:
                  global:
                    - kaniko_buildpack
                    - jobConfig_presubmit
              - jobConfig:
                  name: post-telemetry-manager-build
                  branches:
                    - "^main$"
                    - "^release-\\d+\\.\\d+$"
                  always_run: true
                  labels:
                    preset-signify-prod-secret: "true"
                  args:
                    - "--name=telemetry-manager"
                    - "--config=/config/kaniko-build-config.yaml"
                    - "--context=."
                    - "--dockerfile=Dockerfile"
                    - '--tag={{`{{ .Env \"PULL_BASE_SHA\" }}`}}'
                inheritedConfigs:
                  global:
                    - kaniko_buildpack
                    - jobConfig_postsubmit
                    - "disable_testgrid"
              - jobConfig:
                  name: pre-main-telemetry-module-verify
                  always_run: "true"
                  optional: "false"
                  env:
                    # TODO: Below line is a workaround -> Check issue https://github.com/kyma-project/test-infra/issues/6513
                    JOB_VM_COMMAND: >-
                      export PATH=$PATH:$HOME/${JOB_REPO_NAME}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/go/bin
                      && make run-with-lm-using-local-images
                inheritedConfigs:
                  global:
                    - jobConfig_default
                    - jobConfig_presubmit
                    - image_kyma-integration
                    - extra_refs_test-infra
                  local:
                    - job_default
                    - vm_job_make
                    - vm_job_k3d
                    - vm_job_labels
              - jobConfig:
                  name: release-telemetry-module
                  labels:
                    preset-sa-kyma-push-images: "true"
                    preset-bot-github-token: "true"
                  env:
                    MODULE_REGISTRY: "europe-docker.pkg.dev/kyma-project/prod/unsigned" 
                    IMG: "europe-docker.pkg.dev/kyma-project/prod/telemetry-manager:${PULL_BASE_SHA}"
                  command: "make"
                  args:
                    - "release"
                  branches:
                    - "^release-\\d+\\.\\d+$"
                inheritedConfigs:
                  global:
                    - image_buildpack-golang
                    - jobConfig_default
                    - jobConfig_postsubmit
                  local:
                    - job_default
