name: Get OIDC Token Workflow

on:
  pull_request_target:
    types: [ opened, edited, synchronize, reopened, ready_for_review ]

jobs:
  get_oidc_token_job:
    permissions:
      id-token: write # This is required for requesting the JWT token
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    name: A job to get OIDC token
    outputs:
      oidc_token: ${{ steps.get_oidc.outputs.jwt }}
    steps:
     # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: cd .github/actions/expose-jwt-action
      - run: npm init -y
      - run: npm install @actions/core
      - run: npm install @actions/github
      # This action is used to get the JWT token from the OIDC provider and set is as an output and an environment variable
      - uses: ./.github/actions/expose-jwt-action
        name: Get JWT token
        id: get_oidc
      # OIDC debugger action written in Golang for debugging OIDC claims in the logs
      - name: Checkout actions-oidc-debugger
        uses: actions/checkout@v4
        with:
          repository: github/actions-oidc-debugger
          ref: main
          path: ./.github/actions/actions-oidc-debugger
      - name: Debug OIDC Claims
        uses: ./.github/actions/actions-oidc-debugger
        with:
          audience: 'https://github.com/github'
      - name: Save OIDC Token to File
        run: echo "${{ steps.get_oidc.outputs.jwt }}" > oidc_token.txt
      - name: Encrypt OIDC Token
        id: encrypt_oidc_token
        run: |
          echo "Encrypting OIDC token..."
          # Szyfrowanie tokenu przy u≈ºyciu OpenSSL i zapisanie do pliku
          echo $jwt | openssl aes-256-cbc -a -salt -pass pass:$ENCRYPTION_SECRET -out ./oidc_token.enc
          echo "::set-output name=encrypted_token_path::./oidc_token.enc"
        env:
          ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}
      - name: Upload Encrypted Token as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: oidc-token-encrypted
          path: ${{ steps.encrypt_oidc_token.outputs.encrypted_token_path }}


  use_encrypted_oidc_token:
    needs: get_oidc_token_job
    runs-on: ubuntu-latest
    steps:
      - name: Download Encrypted OIDC Token
        uses: actions/download-artifact@v4
        with:
          name: oidc-token-encrypted
      - name: Decrypt OIDC Token and Set as Output
        id: decrypt_oidc_token
        run: |
          openssl aes-256-cbc -d -a -in ./oidc_token.enc -out ./oidc_token.txt -pass pass:$ENCRYPTION_SECRET
          oidc_token=$(cat ./oidc_token.txt)
          echo "Decrypted OIDC Token: $oidc_token"
          echo "::set-output name=oidc_token::$oidc_token"
        env:
          ENCRYPTION_SECRET: ${{ secrets.ENCRYPTION_SECRET }}

  call_reusable_workflow:
   needs: use_encrypted_oidc_token
   uses: akiioto/test-infra/.github/workflows/reusable-workflow-proxy.yml@main
   secrets: inherit
   with:
     oidc_token: ${{ needs.use_encrypted_oidc_token.outputs.oidc_token }}